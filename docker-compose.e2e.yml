x-amqp-monitoring: &amqp-monitoring
  AMQP_ADDRESS: core-engine.monitoring
  AMQP_PASSWORD: simetraehcapa
  AMQP_PORT: "5672"
  AMQP_SERVER: msa-broker
  AMQP_USER: artemis
x-amqp-syslog: &amqp-syslog
  AMQP_ADDRESS: core-engine.syslog
  AMQP_PASSWORD: simetraehcapa
  AMQP_PORT: "5672"
  AMQP_SERVER: msa-broker
  AMQP_USER: artemis
x-es-configuration: &es-configuration
  ES_CREDENTIALS: c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
  ES_SERVERS: msa-es
x-logging: &logging
  driver: json-file
  options:
    max-buffer-size: 4m
    max-file: "5"
    max-size: 10m
    mode: non-blocking
networks:
  default:
    driver_opts:
      encrypted: "true"
services:
  msa-alarm:
    depends_on:
      msa-api:
        condition: service_healthy
      msa-db:
        condition: service_healthy
      msa-es:
        condition: service_started
    environment:
      <<: *es-configuration
    healthcheck:
      test:
        - CMD-SHELL
        - /opt/sms/bin/sms -e ISALIVE -t 1 | grep -q OK || exit 1
    image: ubiqube/msa2-alarm:sha-3b59c21d6962771bc5a047640b5093c54f8451e5
    logging:
      <<: *logging
    volumes:
      - msa_alarmbulkfiles:/opt/sms/spool/alarms
      - msa_alarmbulkfiles_err:/opt/sms/spool/alarms-error
  msa-api:
    depends_on:
      msa-db:
        condition: service_healthy
      msa-es:
        condition: service_started
      msa-mongodb:
        condition: service_healthy
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
    environment:
      <<: *es-configuration
    healthcheck:
      interval: 10s
      retries: 3
      start_period: 90s
      test:
        - CMD-SHELL
        - curl -s --fail http://localhost:8480/actuator/health |jq -r '.status' |grep '^UP$$'
      timeout: 5s
    image: ubiqube/msa2-api:sha-aaa8b33e18436d3ccb502884c7a248fb3b7b83aa
    logging:
      <<: *logging
    ports:
      - 8480:8480
      - 8787:8787
    volumes:
      - msa_entities:/opt/fmc_entities
      - msa_repository:/opt/fmc_repository
      - rrd_repository:/opt/rrd
      - msa_dev:/opt/devops/
      - msa_api_logs:/opt/wildfly/logs
      - msa_api_keystore:/etc/pki/jentreprise
  msa-auth:
    depends_on:
      msa-db:
        condition: service_healthy
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: ubiqube
    healthcheck:
      interval: 30s
      retries: 5
      start_period: 1m
      test: timeout 10s bash -c ':> /dev/tcp/127.0.0.1/8080'
      timeout: 10s
    image: ubiqube/msa2-auth:sha-723debb0624d729ce34b585b649e25489932c67f
  msa-broker:
    environment:
      ARTEMIS_PASSWORD: simetraehcapa
      ARTEMIS_USER: artemis
      EXTRA_ARGS: --http-host 0.0.0.0 --relax-jolokia --clustered --addresses core-engine.syslog:anycast,core-engine.monitoring:anycast --queues core-engine.syslog:anycast,core-engine.monitoring:anycast
    healthcheck:
      test: ./bin/artemis check node --user=$${ARTEMIS_USER} --password=$${ARTEMIS_PASSWORD} --silent &>/dev/null
    image: docker.io/ubiqube/msa2-broker:sha-4736bedde8b4ab508f6f4efd26537a7b19beb956
    logging:
      <<: *logging
    volumes:
      - msa_broker:/var/lib/artemis-instance
  msa-bud:
    depends_on:
      msa-db:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - /opt/sms/bin/sms -e ISALIVE -t 1 | grep -q OK || exit 1
    image: ubiqube/msa2-bud:sha-5014ee5aca6ae16f3202e70c526ddc2af9d28d95
    logging:
      <<: *logging
  msa-camunda:
    depends_on:
      msa-db:
        condition: service_healthy
    environment:
      DB_DRIVER: org.postgresql.Driver
      DB_PASSWORD: camunda
      DB_URL: jdbc:postgresql://msa-db:5432/process-engine
      DB_USERNAME: camunda
      DB_VALIDATE_ON_BORROW: "true"
      DB_VALIDATION_QUERY: SELECT 1
      WAIT_FOR: msa-db:5432
      WAIT_FOR_TIMEOUT: 60
    healthcheck:
      interval: 10s
      retries: 3
      start_period: 90s
      test:
        - CMD-SHELL
        - curl -s --fail http://localhost:8080/actuator/health |jq -r '.status' |grep '^UP$$'
      timeout: 5s
    image: ubiqube/msa2-camunda:sha-096bd9c6c1e97adc8431a2c78f9ad03ea49f24d0
    logging:
      <<: *logging
  msa-cerebro:
    depends_on:
      msa-es:
        condition: service_started
    entrypoint:
      - /opt/cerebro/bin/cerebro
      - -Dhosts.0.host=http://msa-es:9200
    environment:
      AUTH_TYPE: basic
      BASIC_AUTH_PWD: N@X{M4tfw'5%)+35
      BASIC_AUTH_USER: cerebro
    healthcheck:
      test: curl --fail http://localhost:9000/
    image: ubiqube/msa2-cerebro:sha-96543f8572e5ff100650967fa2fda2af5dc41d58
    logging:
      <<: *logging
    ports:
      - 9000:9000
  cloudclapp:
    depends_on:
      - msa-api
    environment:
      - UBIQUBE_CAPTCHA_SITE_KEY=6Ld2zF4dAAAAAJlqZMIHpPeb3aYhcyy1K3NWPtqi
      - UBIQUBE_LICENSE_AGREEMENT_LINK=https:\/\/cloudclapp.com\/EndUserLicenceAgreement.html
    healthcheck:
      test:
        - CMD-SHELL
        - curl --fail http://localhost:8080
    image: ubiqube/cloudclapp:de66eeec8fe037062997347ef80677e146825bd0
  msa-db:
    environment:
      CAMUNDA_DB: process-engine
      CAMUNDA_PASSWORD: camunda
      CAMUNDA_USER: camunda
      KEY_VAULT_DB: key_vault
      KEY_VAULT_USER: key_vault
      MAX_CONNECTIONS: 1600
      PG_DATABASE: POSTGRESQL
      PG_MODE: primary
      PG_PASSWORD: my_db_password
      PG_PRIMARY_PASSWORD: my_db_password
      PG_PRIMARY_PORT: 5432
      PG_PRIMARY_USER: postgres
      PG_ROOT_PASSWORD: my_db_password
      PG_USER: postgres
    healthcheck:
      test:
        - CMD-SHELL
        - /usr/pgsql-12/bin/pg_isready -h localhost
      timeout: 20s
    image: ubiqube/msa2-db:sha-5de344dbbbb7085fc637385b383d378c268ad5ff
    logging:
      <<: *logging
    shm_size: 1g
  msa-dev:
    command:
      - /docker-entrypoint.sh
      - --cloudclapp
    healthcheck:
      test:
        - CMD-SHELL
        - test -f /usr/bin/install_libraries.sh || echo false
    image: ubiqube/msa2-linuxdev:sha-b319e9c9791d1659a31128a964a5ad7c7f958296
    logging:
      <<: *logging
    volumes:
      - msa_api:/opt/ubi-jentreprise/generated/conf
      - msa_dev:/opt/devops/
      - msa_entities:/opt/fmc_entities
      - msa_repository:/opt/fmc_repository
  msa-es:
    environment:
      <<: *es-configuration
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      script.painless.regex.enabled: "true"
    healthcheck:
      interval: 60s
      start_period: 60s
      test: |
        curl -s -H "Authorization: Basic $${ES_CREDENTIALS}" 'http://localhost:9200/_cluster/health?pretty' |jq -e '.status == "green"'
    image: ubiqube/msa2-es:sha-589156fb258a4ff4080853b77b5bdc74cae04b9c
    logging:
      <<: *logging
    ulimits:
      memlock:
        hard: -1
        soft: -1
    volumes:
      - msa_es:/usr/share/elasticsearch/data
  msa-front:
    depends_on:
      msa-api:
        condition: service_started
      msa-camunda:
        condition: service_started
      msa-es:
        condition: service_started
      msa-ui:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - curl -sk --fail https://localhost/version/ | grep -E '^\{"jira_version":"\d\.\d\.\d","msa_version":"\d\.\d\.\d","ccla_version":"\d\.\d\.\d","build":"\d+"\}$'
    image: ubiqube/msa2-front:sha-40701935e9cf8044b0dff5b367706753c506b5c7
    logging:
      <<: *logging
    # uncomment one of the 2 sections below when installing a custom certificate
    # - Docker standard standalone installation
    # volumes:
    #    - "msa_front:/etc/nginx/ssl"
    # - Docker Swarm HA installation
    # volumes:
    #    - "/mnt/NASVolume/msa_front:/etc/nginx/ssl"

    ports:
      - mode: host
        protocol: tcp
        published: 80
        target: 80
      - mode: host
        protocol: tcp
        published: 443
        target: 443
    volumes:
      - ./front/nginx_ccla.conf:/etc/nginx/custom_conf.d/https/nginx_ccla.conf
      - ./front/version.html:/app/version/index.html
  msa-key-vault:
    cap_add:
      - IPC_LOCK
    command: server
    depends_on:
      - msa-db
    environment:
      VAULT_ADDR: http://0.0.0.0:8200
    image: hashicorp/vault:latest
    ports:
      - 8200:8200
    volumes:
      - ./lab/key_vault/config.hcl:/vault/config/config.hcl
  msa-kibana:
    depends_on:
      msa-es:
        condition: service_started
    environment:
      <<: *es-configuration
      ELASTICSEARCH_HOSTS: http://msa-es:9200
      ELASTICSEARCH_URL: http://msa-es:9200
    healthcheck:
      test: curl -k --fail http://localhost:5601/kibana/
    image: ubiqube/msa2-kibana:sha-bd9289fbf2190aeace32555da429164a029435d0
    logging:
      <<: *logging
    ports:
      - 5601:5601
  msa-linux:
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - DAC_READ_SEARCH
      - sys_rawio
    devices: # required for dmidecode used by polld/asset
      - /dev/mem:/dev/mem
    healthcheck:
      test:
        - CMD-SHELL
        - test -f /usr/bin/install_libraries.sh || echo false
    image: ubiqube/msa2-linuxme:sha-6e0f726ef379de675437ebb3f9ed8f7ca3e26177
    logging:
      <<: *logging
  msa-mongodb:
    env_file:
      - .env
    #      ccla must match user created in mongo-init.js
    environment:
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-my_db_password}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://${DB_USER:-msaUser}:${DB_PASSWORD:-ubiqube38}@localhost:${DB_PORT:-27017}/${DB_NAME:-msa} --quiet
    image: ubiqube/msa2-mongodb:sha-924d5606f57364918ed14c9810d0e43b880bb90a
    ports:
      - 27017:27017
    restart: unless-stopped
    volumes:
      - msa_mongodb_data:/data/db
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  msa-monitor-writer:
    depends_on:
      msa-broker:
        condition: service_started
      msa-mongodb:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - curl -s --fail http://localhost:9099/mon-writer/actuator/health |jq -r '.status' |grep '^UP$$'
    image: ubiqube/msa2-monitor-writer:sha-4eb3dd6373dd2df965aeca8d3146f89627a40e9b
  msa-monitoring:
    depends_on:
      msa-broker:
        condition: service_started
      msa-db:
        condition: service_healthy
      msa-dev:
        condition: service_started
      msa-es:
        condition: service_started
      msa-sms:
        condition: service_started
    environment:
      <<:
        - *es-configuration
        - *amqp-monitoring
      TARGET_MON: RRD
      #   possible values RRD, ES, AMQP
    healthcheck:
      test:
        - CMD-SHELL
        - /opt/sms/bin/sms -e ISALIVE -t 1 | grep -q OK || exit 1
    image: ubiqube/msa2-monitoring:sha-d0084df2f656c78609701637266bee1821c8676e
    logging:
      <<: *logging
    volumes:
      - msa_dev:/opt/devops/
      - msa_entities:/opt/fmc_entities
      - msa_repository:/opt/fmc_repository
      - rrd_repository:/opt/rrd
      - msa_monitbulkfiles:/opt/sms/spool/parser
      - msa_monitbulkfiles_err:/opt/sms/spool/parser-error
  msa-parse:
    depends_on:
      msa-broker:
        condition: service_started
      msa-db:
        condition: service_healthy
      msa-dev:
        condition: service_started
      msa-es:
        condition: service_started
      msa-sms:
        condition: service_healthy
    environment:
      <<:
        - *es-configuration
        - *amqp-syslog
    healthcheck:
      test:
        - CMD-SHELL
        - /opt/sms/bin/sms -e ISALIVE -t 1 | grep -q OK || exit 1
    image: ubiqube/msa2-parse:sha-ac6528ce462f570508db535bdd8540a892d4d67e
    logging:
      <<: *logging
    volumes:
      - msa_dev:/opt/devops/
      - msa_parsebulkfiles:/opt/sms/spool/parser
      - msa_parsebulkfiles_err:/opt/sms/spool/parser-error
  msa-rsyslog:
    depends_on:
      msa-broker:
        condition: service_started
    environment:
      <<: *amqp-syslog
      ACTIONTYPE: omamqp1
    healthcheck:
      test:
        - CMD-SHELL
        - ps -p 1 -h -o%cpu | awk '{if ($$1 > 99) exit 1; else exit 0;}'
    image: ubiqube/msa2-rsyslog:sha-e11fa7964fcb98181241ec7bd28709fe570142c2
    logging:
      <<: *logging
    ports:
      - mode: host
        protocol: udp
        published: 514
        target: 514
      - mode: host
        protocol: tcp
        published: 514
        target: 514
      - mode: host
        protocol: tcp
        published: 6514
        target: 6514
  msa-sms:
    depends_on:
      msa-db:
        condition: service_healthy
      msa-dev:
        condition: service_started
      msa-es:
        condition: service_started
    environment:
      <<: *es-configuration
      UBIQUBE_INSTALL_AWS_CLI: "true"
    healthcheck:
      test:
        - CMD-SHELL
        - /opt/sms/bin/sms -e ISALIVE -t 1 | grep -q OK || exit 1
    image: ubiqube/msa2-sms:sha-b2bc82575eac18f6e7c9beb4568e8336d9af76d1
    logging:
      <<: *logging
    ports:
      - mode: host
        protocol: udp
        published: 69
        target: 69
      - mode: host
        protocol: udp
        published: 5200
        target: 5200
    volumes:
      - msa_dev:/opt/devops/
      - msa_entities:/opt/fmc_entities
      - msa_repository:/opt/fmc_repository
      - msa_svn_ws:/opt/sms/spool/routerconfigs
      - msa_bulkfiles:/opt/sms/spool/parser
      - msa_bulkfiles_err:/opt/sms/spool/parser-error
      - ./sms/etc/ssh/ssh_config.d/90-ubiqube.conf:/etc/ssh/ssh_config.d/90-ubiqube.conf
  msa-smtp:
    environment:
      ALLOWED_SENDER_DOMAINS: ""
      ALLOW_EMPTY_SENDER_DOMAINS: "true"
      HOSTNAME: msa-smtp
      # RELAYHOST: <MTA ip>:25
      POSTFIX_message_size_limit: 2097152
    image: boky/postfix:4.2.1-alpine
  msa-snmptrap:
    depends_on:
      msa-db:
        condition: service_healthy
      msa-dev:
        condition: service_started
      msa-es:
        condition: service_started
    environment:
      <<: *es-configuration
    healthcheck:
      test:
        - CMD-SHELL
        - /opt/sms/bin/sms -e ISALIVE -t 1 | grep -q OK || exit 1
    image: ubiqube/msa2-snmptrap:sha-7fbf58ec13581f37a8c9523e35d8e73f73049456
    logging:
      <<: *logging
    ports:
      - mode: host
        protocol: udp
        published: 162
        target: 162
    volumes:
      - msa_dev:/opt/devops/
      - msa_snmptrapbulkfiles:/opt/sms/spool/parser
      - msa_snmptrapbulkfiles_err:/opt/sms/spool/parser-error
  msa-ui:
    depends_on:
      msa-api:
        condition: service_started
    environment:
      - FEATURE_ADMIN=true
      - FEATURE_REPOSITORY=true
      - FEATURE_CONNECTION_STATUS=true
      - FEATURE_ALARMS=true
      - FEATURE_LICENCE=true
      - FEATURE_TOPOLOGY=true
      - FEATURE_MONITORING_PROFILES=true
      - FEATURE_PROFILE_AUDIT_LOGS=true
      - FEATURE_PERMISSION_PROFILES=true
      - FEATURE_AI_ML=false
      - FEATURE_MICROSERVICE_BULK_OPERATION=false
      - FEATURE_EDIT_VARIABLES_IN_MICROSERVICE_CONSOLE=true
      - FEATURE_WORKFLOW_OWNER=false
      - FEATURE_PERMISSION_PROFILE_LABELS=false
      - FEATURE_BPM=true
      - UBIQUBE_ES_SECURITY_DISABLED=false
      - FEATURE_ALARMS_AUTO_CLEARANCE=false
      - FEATURE_IMPORT_WITH_SAME_AND_UPPERRANK=true
      - FEATURE_REPOFOLDERLIST=[\"Datafiles\", \"Shared\"]
      - FEATURE_ALARM_TROUBLE_TICKET=false
    healthcheck:
      test:
        - CMD-SHELL
        - curl --fail http://localhost:8080
    image: ubiqube/msa2-ui:de66eeec8fe037062997347ef80677e146825bd0
    logging:
      <<: *logging
  msa2-es-ilm:
    container_name: msa2_es-ilm
    # healthcheck:
    #  test: ["CMD-SHELL", "find /opt/msa2-es-ilm/log/log_retention.log -type f -mmin -10"]
    depends_on:
      msa-es:
        condition: service_started
    environment:
      <<: *es-configuration
      ELASTICSEARCH_URL: msa_es:9200
      UBI_ES_ALARM_INDEX_MULTIPLE_TTL: '*|90d'
      UBI_ES_AUDIT_INDEX_MULTIPLE_TTL: '*|90d'
      UBI_ES_CACHE_INDEX_DEFAULT_TTL: 1w
      UBI_ES_DELETE_SCROLL_SIZE: "4000"
      UBI_ES_ILM_LOG_CRONTAB: '# */2 * * * * root php /opt/ubi-es-ilm/log_retention_management.php --verbose=3 > /proc/1/fd/1 2>&1'
      # For elasticsearch scripts /opt/ubi-es-ilm/log_retention_management.php
      # UBI_ES_INDEX_MULTIPLE_TTL:        "type:traffic|7d,type:event|30d,*|90d"
      UBI_ES_INDEX_MULTIPLE_TTL: '*|90d'
      UBI_ES_LOG_DETENTION_DELETE: "true"
      UBI_ES_LOG_SEARCH_INDEX_LIST: ubilogs
      UBI_ES_MAX_DOCS: ""
      UBI_ES_RETENTION_ALARM_INDEX_NAME: ubialarm*
      UBI_ES_RETENTION_AUDIT_INDEX_NAME: ubiaudit*
      UBI_ES_RETENTION_INDEX_NAME: ubilogs*
    image: ubiqube/msa2-es-ilm:sha-e503133a1ced46b84d0044b92dfe7b2edad312df
    restart: unless-stopped
    volumes:
      - msa2_es-ilm:/opt/msa2-es-ilm
volumes:
  mano_nfvo:
  mano_vnfm:
  msa2_es-ilm:
  msa_alarmbulkfiles:
  msa_alarmbulkfiles_err:
  msa_api:
  msa_api_keystore:
  msa_api_logs:
  msa_broker:
  msa_bulkfiles:
  msa_bulkfiles_err:
  msa_dev:
  msa_entities:
  msa_es:
  msa_front:
  msa_mongodb_data:
  msa_monitbulkfiles:
  msa_monitbulkfiles_err:
  msa_parsebulkfiles:
  msa_parsebulkfiles_err:
  msa_repository:
  msa_snmptrapbulkfiles:
  msa_snmptrapbulkfiles_err:
  msa_svn:
  msa_svn_ws:
  rrd_repository:
