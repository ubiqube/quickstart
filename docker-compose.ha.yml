# This docker-compose file is provided as an example to create a Docker Swarm based MSActivator setup
version: '3.8'
services:
  msa-front:
    image: openmsa/openmsa:msa2-front-2.7.0GA-0b49277e6059f6c16f1a1bb6cb59cba116599b19
    depends_on:
    - msa-api
    - msa-ui
    - camunda
    - msa-ai-ml
    healthcheck:
      test: [CMD-SHELL, curl -k --fail https://localhost]
      timeout: 2s
      retries: 10
      interval: 10s
      start_period: 30s
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
        - node.role==manager
    ports:
    - target: 80
      published: 80
      protocol: tcp
      mode: ingress
    - target: 443
      published: 443
      protocol: tcp
      mode: ingress
    - target: 514
      published: 514
      protocol: udp
      mode: ingress
    - target: 162
      published: 162
      protocol: udp
      mode: ingress
    - target: 69
      published: 69
      protocol: udp
      mode: ingress
    - 5200-5200:5200-5200/udp
    #
    # uncomment one of the 2 sections below when installing a custom certificate 
    # - Docker standard standalone installation
    #volumes:
    #    - "msa_front:/etc/nginx/ssl"
    # - Docker Swarm HA installation
    #volumes:
    #    - "/mnt/NASVolume/msa_front:/etc/nginx/ssl"

  db:
    image: ubiqube/msa2-db:d8aba832890c9bef80cb891cedf2744c520094ec
    command: postgres -c 'max_connections=800' -c "max_prepared_transactions=100"
    healthcheck:
      test: [CMD-SHELL, pg_isready -U postgres]
      interval: 30s
      timeout: 60s
      retries: 5
    environment:
      POSTGRES_PASSWORD: my_db_password
      POSTGRES_DB: POSTGRESQL
      CAMUNDA_PASSWORD: camunda
      CAMUNDA_DB: process-engine
      CAMUNDA_USER: camunda
    volumes:
    - /mnt/NASVolume/msa_db:/var/lib/postgresql/data
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
  msa-api:
    image: ubiqube/msa2-api:6f544929d9d443286ab7b19f6350442450d14c6b
    depends_on:
    - db
    healthcheck:
      test: [CMD-SHELL, curl --fail http://localhost:8480]
    environment:
    - ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
      update_config:
        parallelism: 1
      restart_policy:
        condition: on-failure
        max_attempts: 3
    volumes:
    - /mnt/NASVolume/msa_dev:/opt/devops/
    - /mnt/NASVolume/rrd_repository:/opt/rrd
    - /mnt/NASVolume/msa_entities:/opt/fmc_entities
    - /mnt/NASVolume/msa_repository:/opt/fmc_repository
    - /mnt/NASVolume/msa_api_logs:/opt/wildfly/logs/processLog
    networks:
      default:
        aliases:
        - msa_api
  msa-ui:
    image: ubiqube/msa2-ui:2223a5c1a427b1c6dcbc2aac7e24c77feb004855
    depends_on:
    - msa-api
    healthcheck:
      test: [CMD-SHELL, curl --fail http://localhost:8080]
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
        - node.role==manager
    environment:
    - FEATURE_ADMIN=true
    - FEATURE_CONNECTION_STATUS=true
    - FEATURE_ALARMS=true
    - FEATURE_LICENCE=true
    - FEATURE_TOPOLOGY=true
    - FEATURE_MONITORING_PROFILES=true
    - FEATURE_SCHEDULE_WORKFLOWS=true
    - FEATURE_PROFILE_AUDIT_LOGS=true
    - FEATURE_PERMISSION_PROFILES=true
    - FEATURE_AI_ML=true
    - FEATURE_WORKFLOW_OWNER=false
    networks:
      default:
        aliases:
        - msa_ui
  msa-sms:
    image: ubiqube/msa2-sms:2c7965228f1024c1a2bc6605ea7d448bdd9b8d89
    depends_on:
    - db
    healthcheck:
      test: [CMD-SHELL, /etc/init.d/ubi-sms status | grep -q 'service seems UP' ||
          exit 1]
    environment:
    - ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
    volumes:
    - /mnt/NASVolume/msa_dev:/opt/devops/
    - /mnt/NASVolume/msa_entities:/opt/fmc_entities
    - /mnt/NASVolume/msa_repository:/opt/fmc_repository
    - /mnt/NASVolume/rrd_repository:/opt/rrd
    - /mnt/NASVolume/msa_svn:/opt/svnroot
    - /mnt/NASVolume/msa_bulkfiles:/opt/sms/spool/parser
    - /mnt/NASVolume/msa_sms_logs:/opt/sms/logs
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
    networks:
      default:
        aliases:
        - msa_sms

  msa-bud:
    image: ubiqube/msa2-bud:e7573c41ce0848d5550f8f2f008c1da4355b5ea9
    depends_on:
    - db
    healthcheck:
      test: [CMD-SHELL, /etc/init.d/ubi-bud status | grep -q 'service seems UP' ||
          exit 1]
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
    networks:
      default:
        aliases:
        - msa_bud

  msa-alarm:
    depends_on:
    - db
    - msa-api
    image: ubiqube/msa2-alarm:e519a4e22845f6c12cb6b18ee6b39becda39eb94
    healthcheck:
      test: [CMD-SHELL, /etc/init.d/ubi-alarm status | grep -q 'service seems UP'
          || exit 1]
    environment:
    - ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
    volumes:
    - /mnt/NASVolume/msa_sms_logs:/opt/sms/logs
    networks:
      default:
        aliases:
        - msa_alarm

  msa-monitoring:
    image: ubiqube/msa2-monitoring:cf3317a5e389008e020ed1f3e5a53fa5702679bf
    healthcheck:
      test: [CMD-SHELL, /etc/init.d/ubi-poll status | grep -q 'service seems UP' ||
          exit 1]
    depends_on:
    - db
    - msa-es
    - msa-dev
    - msa-api
    environment:
    - ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
    volumes:
    - /mnt/NASVolume/msa_dev:/opt/devops/
    - /mnt/NASVolume/msa_entities:/opt/fmc_entities
    - /mnt/NASVolume/msa_repository:/opt/fmc_repository
    - /mnt/NASVolume/rrd_repository:/opt/rrd
    - /mnt/NASVolume/msa_bulkfiles:/opt/sms/spool/parser
    - /mnt/NASVolume/msa_sms_logs:/opt/sms/logs
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
    networks:
      default:
        aliases:
        - msa_monitoring

  camunda:
    depends_on:
    - db
    image: ubiqube/msa2-camunda:507b2c9b8361821915c4bd9255bafb47ace89079
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
    environment:
      DB_DRIVER: org.postgresql.Driver
      DB_URL: jdbc:postgresql://db:5432/process-engine
      DB_USERNAME: camunda
      DB_PASSWORD: camunda
      DB_VALIDATE_ON_BORROW: 'true'
      WAIT_FOR: db:5432
      WAIT_FOR_TIMEOUT: 60
  msa-es:
    image: ubiqube/msa2-es:f1d8ba7f38e65a375af4c22f9f2676a2cb480f8f
    healthcheck:
      test: [CMD-SHELL, "test -f /home/install/init-done && curl -s -XGET -H 'Authorization:\
          \ Basic c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc='  'http://localhost:9200/_cluster/health?pretty'\
          \ | grep -q 'status.*green' || exit 1"]
      timeout: 2s
      retries: 10
      interval: 10s
      start_period: 30s
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
    environment:
    - discovery.type=single-node
    - script.painless.regex.enabled=true
    - bootstrap.memory_lock=true
    - ES_JAVA_OPTS=-Xms512m -Xmx1024m
    - ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
    volumes:
    - /mnt/NASVolume/msa_es:/usr/share/elasticsearch/data
    networks:
      default:
        aliases:
        - msa_es

  msa-kibana:
    image: ubiqube/msa2-kibana:e882bf60f8eeee721e7a9037efd86198ec5a5635
    depends_on:
    - msa-es
    ports:
    - 5601:5601
    environment:
    - ELASTICSEARCH_URL=http://msa_es:9200
    - ELASTICSEARCH_HOSTS=http://msa_es:9200
    - ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
    networks:
      default:
        aliases:
        - msa_kibana
  msa-ai-ml:
    image: ubiqube/msa2-ai-ml:63c7fab8c111b6cc85da049f45ebc6175a9b269a
    healthcheck:
      test: [CMD-SHELL, python /msa_proj/health_check.py]
    ports:
    - 8000:8000
    volumes:
    - /mnt/NASVolume/msa_ai_ml_db:/msa_proj/database
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
    networks:
      default:
        aliases:
        - msa_ai_ml

  msa-cerebro:
    image: ubiqube/msa2-cerebro:914750e000db1343d9972bfa6652da1efe4aa32f
    environment:
      AUTH_TYPE: basic
      BASIC_AUTH_USER: cerebro
      BASIC_AUTH_PWD: N@X{M4tfw'5%)+35
    entrypoint:
    - /opt/cerebro/bin/cerebro
    - -Dhosts.0.host=http://msa_es:9200
    depends_on:
    - msa_es
    ports:
    - 9000:9000
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
    networks:
      default:
        aliases:
        - msa_cerebro

  msa-dev:
    image: ubiqube/msa2-linuxdev:f97770af16925f812debf25bf26b5847a670d4df
    depends_on:
    - msa-es
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
    volumes:
    - /mnt/NASVolume/msa_entities:/opt/fmc_entities
    - /mnt/NASVolume/msa_repository:/opt/fmc_repository
    - /mnt/NASVolume/msa_dev:/opt/devops/
    - /mnt/NASVolume/msa_svn:/opt/svnroot
    networks:
      default:
        aliases:
        - msa_dev

networks:
  default:
    driver_opts:
      encrypted: 'true'
