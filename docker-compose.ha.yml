# This docker-compose file is provided as an example to create a Docker Swarm based MSActivator setup
version: "3.8"

x-es-configuration: &es-configuration
    ES_CREDENTIALS: c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
    ES_SERVERS: "msa-es"

x-logging: &logging
  driver: "json-file"
  options:
    mode: non-blocking
    max-buffer-size: "4m"
    max-size: "10m"
    max-file: "5"

services:
  msa-front:
    image: openmsa/openmsa:msa2-front-2.8.11_beta-3727f269dd96b188797d7e85c5d9c0c989891d2b
    depends_on:
      - msa-api
      - msa-ui
      - camunda
    healthcheck:
      test: ["CMD-SHELL", "curl -k --fail https://localhost"]
      timeout: 2s
      retries: 10
      interval: 10s
      start_period: 30s
    deploy:
      replicas: 2
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.labels.worker==app"
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: ingress
      - target: 443
        published: 443
        protocol: tcp
        mode: ingress
      - target: 162
        published: 162
        protocol: udp
        mode: ingress
    logging:
      driver: "json-file"
      options:
        mode: non-blocking
        max-buffer-size: "4m"
        max-size: "10m"
        max-file: "5"
    volumes:
        - "/mnt/NASVolume/msa_front_conf:/etc/nginx/custom_conf.d"
    #
    # uncomment one of the 2 sections below when installing a custom certificate
    # - Docker standard standalone installation
    #volumes:
    #    - "msa_front:/etc/nginx/ssl"
    # - Docker Swarm HA installation
    #volumes:
    #    - "/mnt/NASVolume/msa_front:/etc/nginx/ssl"

  db:
    image: openmsa/openmsa:msa2-db-2.8.11_beta-939d8b3634db82302e03e2057e24db319a0c4a81
    healthcheck:
      test: ["CMD-SHELL", "/usr/pgsql-12/bin/pg_isready -h localhost"]
      timeout: 20s
      interval: 30s
      retries: 5
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.labels.worker==db"
    environment:
      CAMUNDA_PASSWORD: camunda
      CAMUNDA_DB: process-engine
      CAMUNDA_USER: camunda
      KEY_VAULT_USER: key_vault
      KEY_VAULT_DB: key_vault
      PG_MODE: primary
      PG_PRIMARY_USER: postgres
      PG_PRIMARY_PASSWORD: my_db_password
      PG_USER: postgres
      PG_PASSWORD: my_db_password
      PG_DATABASE: POSTGRESQL
      PG_ROOT_PASSWORD: my_db_password
      PG_PRIMARY_PORT: 5432
      MAX_CONNECTIONS: 1600
    volumes:
      - "/mnt/NASVolume/msa_db:/pgsqldata/pgsql"
    logging:
      <<: *logging

  db-replica:
    image: openmsa/openmsa:msa2-db-2.8.11_beta-939d8b3634db82302e03e2057e24db319a0c4a81
    healthcheck:
      test: ["CMD-SHELL", "/usr/pgsql-12/bin/pg_isready -h localhost"]
      timeout: 20s
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.labels.db==replica"
    environment:
      CAMUNDA_PASSWORD: camunda
      CAMUNDA_DB: process-engine
      CAMUNDA_USER: camunda
      KEY_VAULT_USER: key_vault
      KEY_VAULT_DB: key_vault
      PG_MODE: replica
      PG_PRIMARY_USER: postgres
      PG_PRIMARY_PASSWORD: my_db_password
      PG_USER: postgres
      PG_PASSWORD: my_db_password
      PG_DATABASE: POSTGRESQL
      PG_ROOT_PASSWORD: my_db_password
      PG_PRIMARY_PORT: 5432
      PG_PRIMARY_HOST: db
    logging:
      <<: *logging

  msa-api:
    image: openmsa/openmsa:msa2-api-2.8.11_beta-73296be90492034b79631c4259fa554669bae850
    depends_on:
      - db
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8480"]
    deploy:
      replicas: 2
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.labels.worker==app"
      update_config:
        parallelism: 1
      restart_policy:
        condition: on-failure
        max_attempts: 10
    environment:
      <<: *es-configuration
      HOST_HOSTNAME: "{{.Node.Hostname}}"
    volumes:
      - "/mnt/NASVolume/msa_dev:/opt/devops/"
      - "/mnt/NASVolume/rrd_repository:/opt/rrd"
      - "/mnt/NASVolume/msa_entities:/opt/fmc_entities"
      - "/mnt/NASVolume/msa_repository:/opt/fmc_repository"
      - "/mnt/NASVolume/msa_api_logs:/opt/wildfly/logs/processLog"
      - "/mnt/NASVolume/msa_api_keystore:/etc/pki/jentreprise"
    logging:
      <<: *logging
    ports:
      - "8480:8480"
      - "8787:8787"
    networks:
      default:
        aliases:
          - "msa_api"

  msa-ui:
    image: openmsa/openmsa:msa2-ui-2.8.11_beta-c0f8a70b6f1e61168ee21abc74a4892f504ecb3c
    depends_on:
      - msa-api
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080"]
    deploy:
      replicas: 2
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.labels.worker==app"
    environment:
    - FEATURE_ADMIN=true
    - FEATURE_REPOSITORY=true
    - FEATURE_CONNECTION_STATUS=true
    - FEATURE_ALARMS=true
    - FEATURE_LICENCE=true
    - FEATURE_TOPOLOGY=true
    - FEATURE_MONITORING_PROFILES=true
    - FEATURE_PROFILE_AUDIT_LOGS=true
    - FEATURE_PERMISSION_PROFILES=true
    - FEATURE_AI_ML=false
    - FEATURE_MICROSERVICE_BULK_OPERATION=false
    - FEATURE_EDIT_VARIABLES_IN_MICROSERVICE_CONSOLE=true
    - FEATURE_WORKFLOW_OWNER=false
    - FEATURE_PERMISSION_PROFILE_LABELS=false
    - FEATURE_BPM=false
    - FEATURE_REPOFOLDERLIST=["Datafiles","Documentation","Firmware","License","Pki"]
    - FEATURE_HA_DISPLAY=true
    - FEATURE_IMPORT_WITH_SAME_AND_UPPERRANK=false
    - FEATURE_IMPORT_WITH_UPPERRANK=false
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - "msa_ui"

  msa-rsyslog:
    depends_on:
      - msa-sms
    image: openmsa/openmsa:msa2-rsyslog-2.8.11_beta-ce35fbb9c7441f1c4041af6e431a0cfae2809785
    # environment:
      # enable omfwd acxtion type for syslog Forwarding Output Module
      # https://www.rsyslog.com/doc/v8-stable/configuration/modules/omfwd.html
      # default
      # ACTIONTYPE: "omfwd"
      # configure a specific port for TLS. Default is 6514
      # TLS_SYSLOG_PORT: 6514
    deploy:
      replicas: 2
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.labels.worker==app"
    ports:
      - target: 514
        published: 514
        protocol: udp
        mode: ingress
      - target: 514
        published: 514
        protocol: tcp
        mode: ingress
      - target: 6514
        published: 6514
        protocol: tcp
        mode: ingress
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - "msa_rsyslog"

  msa-sms:
    image: openmsa/openmsa:msa2-sms-2.8.11_beta-dcc54db6e172882e0a50d6060ee3f5e539a2bc96
    depends_on:
      - db
    healthcheck:
      timeout: 5s
      retries: 10
      interval: 10s
      start_period: 30s
      test: ["CMD-SHELL", "/etc/init.d/ubi-sms status | grep -q 'service seems UP' || exit 1"]
    environment:
      <<: *es-configuration
      CONTAINER_DOCKNAME: "{{.Task.Name}}.{{.Node.Hostname}}"
      HOST_HOSTNAME: "{{.Node.Hostname}}"
    volumes:
      - "/mnt/NASVolume/msa_dev:/opt/devops/"
      - "/mnt/NASVolume/msa_entities:/opt/fmc_entities"
      - "/mnt/NASVolume/msa_repository:/opt/fmc_repository"
      - "/mnt/NASVolume/rrd_repository:/opt/rrd"
      - "/mnt/NASVolume/msa_svn:/opt/svnroot"
      - "/mnt/NASVolume/msa_bulkfiles:/opt/sms/spool/parser"
      - "/mnt/NASVolume/msa_bulkfiles_err:/opt/sms/spool/parser-error"
      - "/mnt/NASVolume/msa_sms_logs:/opt/sms/logs"
    deploy:
      replicas: 2
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.labels.worker==app"
    ports:
      - target: 69
        published: 69
        protocol: udp
        mode: host
      - target: 5200
        published: 5200
        protocol: udp
        mode: host
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - "msa_sms"
          
  msa-parse:
    depends_on:
      - db
      - msa-es
      - msa-dev
      - msa-sms
    healthcheck:
      test: ["CMD-SHELL", "/etc/init.d/ubi-sms status | grep -q 'service seems UP' || exit 1"]
    image: openmsa/openmsa:msa2-parse-2.8.11_beta-379cfb2abd6e2a2b6471463b23c195031dd0b7fe
    environment:
      <<: *es-configuration
    deploy:
      replicas: 2
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.labels.worker==app"
    logging:
      driver: "json-file"
      options:
        mode: non-blocking
        max-buffer-size: "4m"
        max-size: "20m"
        max-file: "5"
    volumes:
      - "/mnt/NASVolume/msa_dev:/opt/devops/"
      - "/mnt/NASVolume/msa_bulkfiles:/opt/sms/spool/parser"
      - "/mnt/NASVolume/msa_bulkfiles_err:/opt/sms/spool/parser-error"
    networks:
      default:
        aliases:
          - "msa_parse"
          
  msa-snmptrap:
    depends_on:
      - db
      - msa-es
      - msa-dev
    healthcheck:
      test: ["CMD-SHELL", "/etc/init.d/ubi-sms status | grep -q 'service seems UP' || exit 1"]
    image: openmsa/openmsa:msa2-snmptrap-2.8.11_beta-3947c634cf1f95f2f1081305b4081f37265eb46b
    environment:
      <<: *es-configuration
    logging:
      driver: "json-file"
      options:
        mode: non-blocking
        max-buffer-size: "4m"
        max-size: "20m"
        max-file: "5"
    volumes:
      - "/mnt/NASVolume/msa_dev:/opt/devops/"
      - "/mnt/NASVolume/msa_snmptrapbulkfiles:/opt/sms/spool/parser"
      - "/mnt/NASVolume/msa_snmptrapbulkfiles_err:/opt/sms/spool/parser-error"
    deploy:
      replicas: 2
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.labels.worker==app"
    networks:
      default:
        aliases:
          - "msa_snmptrap"
          
  msa-bud:
    image: openmsa/openmsa:msa2-bud-2.8.11_beta-a1f1a06c246caaae1e386531a7fe68b2e1d1d0b8
    depends_on:
      - db
    healthcheck:
      timeout: 5s
      retries: 10
      interval: 10s
      start_period: 30s
      test: ["CMD-SHELL", "/etc/init.d/ubi-bud status | grep -q 'service seems UP' || exit 1"]
    environment:
      - CONTAINER_DOCKNAME={{.Task.Name}}.{{.Node.Hostname}}
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.labels.worker==app"
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - "msa_bud"

  msa-alarm:
    depends_on:
      - db
      - msa-api
    image: openmsa/openmsa:msa2-alarm-2.8.11_beta-23b20049c34b79189e444981e8dafa6c81214521
    healthcheck:
      timeout: 5s
      retries: 10
      interval: 10s
      start_period: 30s
      test: ["CMD-SHELL", "/etc/init.d/ubi-alarm status | grep -q 'service seems UP' || exit 1"]
    environment:
      <<: *es-configuration
      CONTAINER_DOCKNAME: "{{.Task.Name}}.{{.Node.Hostname}}"
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.labels.worker==app"
    volumes:
      - "/mnt/NASVolume/msa_sms_logs:/opt/sms/logs"
      - "/mnt/NASVolume/msa_alarmbulkfiles:/opt/sms/spool/alarms"
      - "/mnt/NASVolume/msa_alarmbulkfiles_err:/opt/sms/spool/alarms-error"
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - "msa_alarm"

  msa-monitoring:
    image: openmsa/openmsa:msa2-monitoring-2.8.11_beta-b3d2c289de5f25bed5033598a52dee0c2a250691
    healthcheck:
      timeout: 5s
      retries: 10
      interval: 10s
      start_period: 30s
      test: ["CMD-SHELL", "/etc/init.d/ubi-poll status | grep -q 'service seems UP' || exit 1"]
    depends_on:
      - db
      - msa-dev
      - msa-api
    environment:
      <<: *es-configuration
      CONTAINER_DOCKNAME: "{{.Task.Name}}.{{.Node.Hostname}}"
    volumes:
      - "/mnt/NASVolume/msa_dev:/opt/devops/"
      - "/mnt/NASVolume/msa_entities:/opt/fmc_entities"
      - "/mnt/NASVolume/msa_repository:/opt/fmc_repository"
      - "/mnt/NASVolume/rrd_repository:/opt/rrd"
      - "/mnt/NASVolume/msa_sms_logs:/opt/sms/logs"
      - "/mnt/NASVolume/msa_bulkfiles:/opt/sms/spool/parser"
      - "/mnt/NASVolume/msa_bulkfiles_err:/opt/sms/spool/parser-error"
    deploy:
      replicas: 2
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.labels.worker==app"
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - "msa_monitoring"

  camunda:
    depends_on:
      - db
    image: openmsa/openmsa:msa2-camunda-2.8.11_beta-d95c1ded1750a35df6593fb5a8bcd376b4a76dd0
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.labels.worker==app"
    environment:
      DB_DRIVER: org.postgresql.Driver
      DB_URL: 'jdbc:postgresql://db:5432/process-engine'
      DB_USERNAME: camunda
      DB_PASSWORD: camunda
      DB_VALIDATE_ON_BORROW: 'true'
      WAIT_FOR: 'db:5432'
      WAIT_FOR_TIMEOUT: 60
    logging:
      <<: *logging

  msa-kibana:
    image: openmsa/openmsa:msa2-kibana-2.8.11_beta-54e81a717d1f9aa7acc372643c6966e23b8b66fe
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: "http://msa_es:9200"
      ELASTICSEARCH_HOSTS: "http://msa_es:9200"
      <<: *es-configuration
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.labels.worker==app"
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - "msa_kibana"

  msa-es:
   # healthcheck:
     # test: ["CMD-SHELL", "test -f /home/install/init-done && curl -s -XGET -H 'Authorization: Basic c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc='  'http://localhost:9200/_cluster/health?pretty' | grep -q 'status.*green' || exit 1"]
     # interval: 60s
     # start_period: 60s
    image: openmsa/openmsa:msa2-es-2.8.11_beta-ba6a2c71fcc016b507d6472c688b56ad1e14774e
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.labels.worker==app"
    environment:
      # discovery.type: "single-node"
      node.roles: "ingest"
      node.name: "ECLv3_Staging_NODE_MSAv3-ES-Client01"
      discovery.seed_hosts: "10.250.132.54,10.250.132.55,10.250.132.56"
      cluster.initial_master_nodes: "ECLv3_Staging_NODE_MSAv3-ES-Master01,ECLv3_Staging_NODE_MSAv3-ES-Master02,ECLv3_Staging_NODE_MSAv3-ES-Master03"
      cluster.name: "ECLv3_Staging"
      network.host: "0.0.0.0"
      http.host: "0.0.0.0"
      network.publish_host: "10.250.132.130"
      script.painless.regex.enabled: "true"
      bootstrap.memory_lock: "true"
      xpack.security.enabled: "true"
      xpack.security.transport.ssl.enabled: "true"
      xpack.security.transport.ssl.verification_mode: "certificate"
      xpack.security.transport.ssl.client_authentication: "required"
      xpack.security.transport.ssl.keystore.path: "elastic-certificates.p12"
      xpack.security.transport.ssl.truststore.path: "elastic-certificates.p12"
      ES_JAVA_OPTS: "-Xms2048m -Xmx2048m"
      <<: *es-configuration
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      default:
        aliases:
          - "msa_es"
    volumes:
     - "/etc/timezone:/etc/timezone:ro"
     - "/etc/localtime:/etc/localtime:ro"
     - "msa_es:/usr/share/elasticsearch/data"
     - "msa_es_config:/usr/share/elasticsearch/config"
    #volumes:
     #- "/mnt/NASVolume/msa_es:/usr/share/elasticsearch/data"

    logging:
      <<: *logging
    ports:
      - "9200:9200"
      - "9300:9300"
      
  msa-cerebro:
    image: openmsa/openmsa:msa2-cerebro-2.8.11_beta-8374160f95e2349711204189a3bf8a385f7252b5
    environment:
      AUTH_TYPE: basic
      BASIC_AUTH_USER: cerebro
      BASIC_AUTH_PWD: "N@X{M4tfw'5%)+35"
    entrypoint:
      - /opt/cerebro/bin/cerebro
      - -Dhosts.0.host=http://msa_es:9200
    ports:
      - "9000:9000"
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.labels.worker==app"
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - "msa_cerebro"

  msa-dev:
    image: openmsa/openmsa:msa2-linuxdev-2.8.11_beta-288ae54172ee172bed8ec6074e112b7a68485c9b
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.labels.worker==app"
    volumes:
      - "/mnt/NASVolume/msa_entities:/opt/fmc_entities"
      - "/mnt/NASVolume/msa_repository:/opt/fmc_repository"
      - "/mnt/NASVolume/msa_dev:/opt/devops/"
      - "/mnt/NASVolume/msa_svn:/opt/svnroot"
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - "msa_dev"

volumes:
  msa_bulkfiles:
  msa_monitbulkfiles:
  msa_es:
  msa_es_config:
  
networks:
  default:
    #driver_opts:
      #encrypted: "true"
