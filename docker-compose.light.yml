version: "3.8"

services:
  msa_front:
    restart: unless-stopped
    container_name: msa_front
    image: openmsa/openmsa:msa2-front-2.6.1-70e7d347287e3a428628e403f57c665fbdd010d4
    healthcheck:
      test: ["CMD-SHELL", "curl -k --fail https://localhost"]
    depends_on:
      - msa_api
      - msa_ui
      - camunda
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 514
        published: 514
        protocol: udp
        mode: host
      - target: 162
        published: 162
        protocol: udp
        mode: host
      - target: 69
        published: 69
        protocol: udp
        mode: host
      - "5200-5200:5200-5200/udp"

    # uncomment one of the 2 sections below when installing a custom certificate
    # - Docker standard standalone installation
    #volumes:
    #    - "msa_front:/etc/nginx/ssl"
    # - Docker Swarm HA installation
    #volumes:
    #    - "/mnt/NASVolume/msa_front:/etc/nginx/ssl"
  db:
    restart: unless-stopped
    container_name: msa_db
    image: openmsa/openmsa:msa2-db-2.6.1-41ebd8816dd8e117a8288f2f0a4a011a031af972
    command: postgres -c 'max_connections=800' -c 'max_prepared_transactions=100'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 60s
      retries: 5
    environment:
      POSTGRES_PASSWORD: my_db_password
      POSTGRES_DB: POSTGRESQL
      CAMUNDA_PASSWORD: camunda
      CAMUNDA_DB: process-engine
      CAMUNDA_USER: camunda
    volumes:
      - "msa_db:/var/lib/postgresql/data"

  msa_api:
    restart: unless-stopped
    container_name: msa_api
    image: openmsa/openmsa:msa2-api-2.6.1-a0bf878970b0a24524b29a32c2b768d23f33645c
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8480"]
    depends_on:
      - db
      - msa_es
    environment:
      - "ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc="
    volumes:
      - "msa_api:/opt/ubi-jentreprise/generated/conf"
      - "msa_entities:/opt/fmc_entities"
      - "msa_repository:/opt/fmc_repository"
      - "rrd_repository:/opt/rrd"
      - "msa_dev:/opt/devops/"
      - "msa_api_logs:/opt/wildfly/logs/"
      - "msa_api_logs:/opt/wildfly/logs/processLog"
    networks:
      default:
        aliases:
          - "msa-api"

  msa_ui:
    restart: unless-stopped
    container_name: msa_ui
    image: openmsa/openmsa:msa2-ui-2.6.1-f6d4968f40885cfdcd4dd9164bcaf8df108799ea
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080"]
    depends_on:
      - msa_api
    environment:
    - FEATURE_ADMIN=true
    - FEATURE_CONNECTION_STATUS=true
    - FEATURE_ALARMS=true
    - FEATURE_LICENCE=true
    - FEATURE_TOPOLOGY=true
    - FEATURE_MONITORING_PROFILES=true
    - FEATURE_SCHEDULE_WORKFLOWS=true
    - FEATURE_PROFILE_AUDIT_LOGS=true
    - FEATURE_PERMISSION_PROFILES=true
    - FEATURE_AI_ML=true
    - FEATURE_WORKFLOW_OWNER=false

  msa_sms:
    restart: unless-stopped
    container_name: msa_sms
    image: openmsa/openmsa:msa2-sms-2.6.1-1d8b34eb09525d900ee9ca078b111187dc6c8c0d
    healthcheck:
      test: ["CMD-SHELL", "/etc/init.d/ubi-sms status | grep -q 'service seems UP' || exit 1"]
    environment:
      - ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
    cap_add:
      - NET_ADMIN
    depends_on:
      - db
      - msa_es
      - msa_dev
    volumes:
      - "msa_dev:/opt/devops/"
      - "msa_entities:/opt/fmc_entities"
      - "msa_repository:/opt/fmc_repository"
      - "msa_sms_logs:/opt/sms/logs"
      - "msa_svn:/opt/svnroot"
      - "msa_bulkfiles:/opt/sms/spool/parser"

  msa_bud:
    restart: unless-stopped
    container_name: msa_bud
    image: openmsa/openmsa:msa2-bud-2.6.1-df7c38796ad9b3ecf3f247dcc8c6e10c1f85279a
    healthcheck:
      test: ["CMD-SHELL", "/etc/init.d/ubi-bud status | grep -q 'service seems UP' || exit 1"]
    depends_on:
      - db
    volumes:
      - "msa_bud_logs:/opt/bud/logs/"

  msa_alarm:
    restart: unless-stopped
    container_name: msa_alarm
    image: openmsa/openmsa:msa2-alarm-2.6.1-bc4390ff9d1c802d483270a51fa72f491874297a
    healthcheck:
      test: ["CMD-SHELL", "/etc/init.d/ubi-alarm status | grep -q 'service seems UP' || exit 1"]
    depends_on:
      - db
      - msa_es
    environment:
      - "ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc="
    volumes:
      - "msa_sms_logs:/opt/sms/logs"
  
  msa_monitoring:
    restart: unless-stopped
    container_name: msa_monitoring
    image: openmsa/openmsa:msa2-monitoring-2.6.0GA-4e6ef663e040933be108bc71627799134bda7d0b
    healthcheck:
      test: ["CMD-SHELL", "/etc/init.d/ubi-poll status | grep -q 'service seems UP' || exit 1"]
    depends_on:
      - db
      - msa_es
      - msa_dev
    environment:
      - ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
    volumes:
      - "msa_dev:/opt/devops/"
      - "msa_entities:/opt/fmc_entities"
      - "msa_repository:/opt/fmc_repository"
      - "rrd_repository:/opt/rrd"
      - "msa_bulkfiles:/opt/sms/spool/parser"
      - "msa_sms_logs:/opt/sms/logs"

  camunda:
    restart: unless-stopped
    container_name: msa_camunda
    depends_on:
      - db
    image: openmsa/openmsa:msa2-camunda-2.6.1-b839a640c1396f27a538c6e633d47ad93796a9e4
    environment:
      DB_DRIVER: org.postgresql.Driver
      DB_URL: 'jdbc:postgresql://db:5432/process-engine'
      DB_USERNAME: camunda
      DB_PASSWORD: camunda
      DB_VALIDATE_ON_BORROW: 'true'
      WAIT_FOR: 'db:5432'
      WAIT_FOR_TIMEOUT: 60

  msa_es:
    restart: unless-stopped
    container_name: msa_es
    image: openmsa/openmsa:msa2-es-2.6.0GA-7d2ae7e7b7a055119c229d4a10c8ac5c5ff9a23e
    healthcheck:
      test: ["CMD-SHELL", "test -f /home/install/init-done && curl -s -XGET -H 'Authorization: Basic c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc='  'http://localhost:9200/_cluster/health?pretty' | grep -q 'status.*green' || exit 1"]
      timeout: 2s
      retries: 10
      interval: 10s
      start_period: 30s 
    environment:
      - discovery.type=single-node
      - script.painless.regex.enabled=true
      - bootstrap.memory_lock=true
      - ES_CREDENTIALS=c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
      - xpack.security.enabled=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx1024m"
    volumes:
      - "msa_es:/usr/share/elasticsearch/data"
    ulimits:
      memlock:
        soft: -1
        hard: -1

  msa_dev:
    restart: unless-stopped
    container_name: msa_dev
    image: openmsa/openmsa:msa2-linuxdev-2.6.1-278d7b20337594aea9ba58ee4c3a94e55d5bdf76
    depends_on:
      - msa_es
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:ro"
      - "msa_entities:/opt/fmc_entities"
      - "msa_repository:/opt/fmc_repository"
      - "msa_dev:/opt/devops/"
      
  linux_me:
    restart: unless-stopped
    container_name: linux_me
    # use local image for quickstart dev => for release: make sure the changes are ported to msa-docker and uncomment the line below
    image: openmsa/openmsa:msa2-linuxme-2.6.0GA-b831acacdef579420ee1abf70ef66655d969fcbb
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - DAC_READ_SEARCH
      - sys_rawio
    ports:
      - "2224:22"
    devices:                     # required for dmidecode used by polld/asset
      - "/dev/mem:/dev/mem"
    networks:
      default:
        ipv4_address: 172.20.0.101
    hostname: linux_me
    privileged: true

  linux_me_2:
    restart: unless-stopped
    container_name: linux_me_2
    # use local image for quickstart dev => for release: make sure the changes are ported to msa-docker and uncomment the line below
    image: openmsa/openmsa:msa2-linuxme-2.6.0GA-b831acacdef579420ee1abf70ef66655d969fcbb
    #build: ./lab/linux.me
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - DAC_READ_SEARCH
      - sys_rawio
    ports:
      - "2225:22"
    devices:                     # required for dmidecode used by polld/asset
      - "/dev/mem:/dev/mem"
    networks:
      default:
        ipv4_address: 172.20.0.102
    hostname: linux_me_2
    privileged: true

volumes:
  msa_api:
  msa_db:
  msa_dev:
  msa_entities:
  msa_repository:
  msa_es:
  rrd_repository:
  msa_api_logs:
  msa_sms_logs:
  msa_bud_logs:
  msa_front:
  msa_svn:
  msa_bulkfiles:

networks:
  default:
    name: quickstart_default
    ipam:
      config:
        - subnet: 172.20.0.0/24
    driver_opts:
      encrypted: "true"
