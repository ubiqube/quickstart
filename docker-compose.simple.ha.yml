# This docker-compose file is provided as an example to create a Docker Swarm based MSActivator setup
version: "3.8"

services:
  msa_front:
    image: openmsa/openmsa:msa2-front-2.3.0GA-2f2087bea3513608aa4b92f0d6f0bbcafbf22a2e
    depends_on:
      - msa_api
      - msa_ui
      - camunda
    deploy:
      replicas: 2
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 514
        published: 514
        protocol: udp
        mode: host
      - target: 162
        published: 162
        protocol: udp
        mode: host
    #
    # uncomment one of the 2 sections below when installing a custom certificate 
    # - Docker standard standalone installation
    #volumes:
    #    - "msa_front:/etc/nginx/ssl"
    # - Docker Swarm HA installation
    #volumes:
    #    - "/mnt/NASVolume/msa_front:/etc/nginx/ssl"

  db:
    image: openmsa/openmsa:msa2-db-2.3.0GA-821e804d7d10187284ecb41e8974e6e554829371
    command: postgres -c 'max_connections=800'
    environment:
      POSTGRES_PASSWORD: my_db_password
      POSTGRES_DB: POSTGRESQL
    volumes:
      - "/mnt/NASVolume/msa_db:/var/lib/postgresql/data"
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.role==manager"
      restart_policy:
        condition: on-failure
 
  msa_api:
    image: openmsa/openmsa:msa2-api-2.3.0GA-ea373f441b99d3f59fb10cdbd7046baec7fc02f3
    depends_on:
      - db
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
      update_config:
        parallelism: 1
      restart_policy:
        condition: on-failure
    entrypoint:
      - /opt/jboss/wildfly/bin/standalone.sh
      - -b
      - 0.0.0.0
      - -bmanagement
      - 0.0.0.0
      - -c
      - ubiqube.xml
    volumes:
      - "/mnt/NASVolume/msa_dev:/opt/devops/"
      - "/mnt/NASVolume/rrd_repository:/opt/rrd"
      - "/mnt/NASVolume/msa_entities:/opt/fmc_entities"
      - "/mnt/NASVolume/msa_repository:/opt/fmc_repository"
      - "/mnt/NASVolume/msa_api_logs:/opt/jboss/wildfly/standalone/log"
      - "/mnt/NASVolume/msa_api_logs:/opt/wildfly/logs/processLog"
      - "/mnt/NASVolume/msa_api:/opt/ubi-jentreprise/generated/conf"

  msa_ui:
    image: openmsa/openmsa:msa2-ui-2.3.0GA-dcd2e94c3395c3ba78004d8d76345d8fcfaaff21
    depends_on:
      - msa_api
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
    environment:
    - FEATURE_ADMIN=true
    - FEATURE_CONNECTION_STATUS=true
    - FEATURE_ALARMS=true
    - FEATURE_LICENCE=true
    - FEATURE_TOPOLOGY=true
    - FEATURE_MONITORING_PROFILES=true
    - FEATURE_SCHEDULE_WORKFLOWS=true
    - FEATURE_PROFILE_AUDIT_LOGS=true
    - FEATURE_PERMISSION_PROFILES=false


  msa_sms:
    image: openmsa/openmsa:msa2-sms-2.3.0GA-302eb8b8f0ad17d7b431c40152707813986c6e77
    depends_on:
      - db
    volumes:
      - "/mnt/NASVolume/msa_dev:/opt/devops/"
      - "/mnt/NASVolume/msa_entities:/opt/fmc_entities"
      - "/mnt/NASVolume/msa_repository:/opt/fmc_repository"
      - "/mnt/NASVolume/rrd_repository:/opt/rrd"
      - "/mnt/NASVolume/msa_svn:/opt/svnroot"
      - "/mnt/NASVolume/msa_sms_logs:/opt/sms/logs"

    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1

  msa_bud:
    image: openmsa/openmsa:msa2-bud-2.3.0GA-6449ea6cc905229a8e8b2686cf0b43a81f02e69d
    depends_on:
      - db
    deploy:
      replicas: 1

  camunda:
    image: camunda/camunda-bpm-platform:7.13.0
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1

  msa_es:
    image: openmsa/openmsa:msa2-es-2.3.0GA-9c616a14ba0c35eb545da78bd40bf4f68d9d0d2c
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
    environment:
      - "discovery.type=single-node"
      - "script.painless.regex.enabled=true"
    volumes:
      - "/mnt/NASVolume/msa_es:/usr/share/elasticsearch/data"

  msa_kibana:
    image: openmsa/openmsa:msa2-kibana-2.3.0GA-868fb6f9e3b5ab8a5a9a346b93b8779262d9e738
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://msa_es:9200
      ELASTICSEARCH_HOSTS: http://msa_es:9200
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"

  msa_cerebro:
    image: lmenezes/cerebro:0.9.2
    entrypoint:
      - /opt/cerebro/bin/cerebro
      - -Dhosts.0.host=http://msa_es:9200
    depends_on:
      - msa_es
    ports:
      - "9000:9000"
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"

  msa_dev:
    image: openmsa/openmsa:msa2-linuxdev-2.3.0GA-73d93dc0779db3e7e22a11db6564c628d465d10e
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.role==manager"
    volumes:
      - "/mnt/NASVolume/msa_entities:/opt/fmc_entities"
      - "/mnt/NASVolume/msa_repository:/opt/fmc_repository"
      - "/mnt/NASVolume/msa_api:/opt/ubi-jentreprise/generated/conf"
      - "/mnt/NASVolume/msa_dev:/opt/devops/"
