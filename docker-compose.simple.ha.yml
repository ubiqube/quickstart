# This docker-compose file is provided as an example to create a Docker Swarm based MSActivator setup
version: "3.8"

services:
  msa_front:
    image: openmsa/openmsa:msa2-front-2.4.1-007b908ed0bdf65525843465dae6ad4dce065767
    depends_on:
      - msa_api
      - msa_ui
      - camunda
      - msa_ai_ml
    deploy:
      replicas: 2
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 514
        published: 514
        protocol: udp
        mode: host
      - target: 162
        published: 162
        protocol: udp
        mode: host
      - target: 69
        published: 69
        protocol: udp
        mode: host
      - "5200-5200:5200-5200/udp"
    #
    # uncomment one of the 2 sections below when installing a custom certificate 
    # - Docker standard standalone installation
    #volumes:
    #    - "msa_front:/etc/nginx/ssl"
    # - Docker Swarm HA installation
    #volumes:
    #    - "/mnt/NASVolume/msa_front:/etc/nginx/ssl"

  db:
    image: openmsa/openmsa:msa2-db-2.4.1-63d701f1b1d668b9bec2345e46f7b943990b1061
    command: postgres -c 'max_connections=800'
    environment:
      POSTGRES_PASSWORD: my_db_password
      POSTGRES_DB: POSTGRESQL
      CAMUNDA_PASSWORD: camunda
      CAMUNDA_DB: process-engine
      CAMUNDA_USER: camunda
    volumes:
      - "/mnt/NASVolume/msa_db:/var/lib/postgresql/data"
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.role==manager"
      restart_policy:
        condition: on-failure
 
  msa_api:
    image: openmsa/openmsa:msa2-api-2.4.1-17617b5ccff2eeb270423bbfb21279e04005386b
    depends_on:
      - db
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
      update_config:
        parallelism: 1
      restart_policy:
        condition: on-failure
    entrypoint:
      - /opt/jboss/wildfly/bin/standalone.sh
      - -b
      - 0.0.0.0
      - -bmanagement
      - 0.0.0.0
      - -c
      - ubiqube.xml
    volumes:
      - "/mnt/NASVolume/msa_dev:/opt/devops/"
      - "/mnt/NASVolume/rrd_repository:/opt/rrd"
      - "/mnt/NASVolume/msa_entities:/opt/fmc_entities"
      - "/mnt/NASVolume/msa_repository:/opt/fmc_repository"
      - "/mnt/NASVolume/msa_api_logs:/opt/jboss/wildfly/standalone/log"
      - "/mnt/NASVolume/msa_api_logs:/opt/wildfly/logs/processLog"
      - "/mnt/NASVolume/msa_api:/opt/ubi-jentreprise/generated/conf"

  msa_ui:
    image: openmsa/openmsa:msa2-ui-2.4.1-178824a2339a247a848f13e19fdf55513edea6b0
    depends_on:
      - msa_api
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
    environment:
    - FEATURE_ADMIN=true
    - FEATURE_CONNECTION_STATUS=true
    - FEATURE_ALARMS=true
    - FEATURE_LICENCE=true
    - FEATURE_TOPOLOGY=true
    - FEATURE_MONITORING_PROFILES=true
    - FEATURE_SCHEDULE_WORKFLOWS=true
    - FEATURE_PROFILE_AUDIT_LOGS=true
    - FEATURE_PERMISSION_PROFILES=true
    - FEATURE_AI_ML=false

  msa_sms:
    image: openmsa/openmsa:msa2-sms-2.4.0GA-2d4632b64b8543fa461a8e9d8c7dc316f74c9ae9
    depends_on:
      - db
    volumes:
      - "/mnt/NASVolume/msa_dev:/opt/devops/"
      - "/mnt/NASVolume/msa_entities:/opt/fmc_entities"
      - "/mnt/NASVolume/msa_repository:/opt/fmc_repository"
      - "/mnt/NASVolume/rrd_repository:/opt/rrd"
      - "/mnt/NASVolume/msa_svn:/opt/svnroot"
      - "/mnt/NASVolume/msa_sms_logs:/opt/sms/logs"
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1

  msa_bud:
    image: openmsa/openmsa:msa2-bud-2.4.0GA-bd904fbd4b3615581672d81f82fdd1959d9ffc93
    depends_on:
      - db
    deploy:
      replicas: 1

  msa_alarm:
    image: openmsa/openmsa:msa2-alarm-2.4.0GA-44d6c6ccce1b491fda81c43107f9557699df346c
    depends_on:
      - db
      - msa_es
    deploy:
      replicas: 1


  camunda:
    image: camunda/camunda-bpm-platform:7.13.0
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
    environment:
      DB_DRIVER: org.postgresql.Driver
      DB_URL: 'jdbc:postgresql://db:5432/process-engine'
      DB_USERNAME: camunda
      DB_PASSWORD: camunda
      DB_VALIDATE_ON_BORROW: 'true'
      WAIT_FOR: 'db:5432'
      WAIT_FOR_TIMEOUT: 60

  msa_es:
    image: openmsa/openmsa:msa2-es-2.4.0GA-efcce09bd86619311efcbe7c2262c53ada20be6c
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
    environment:
      - "discovery.type=single-node"
      - "script.painless.regex.enabled=true"
    volumes:
      - "/mnt/NASVolume/msa_es:/usr/share/elasticsearch/data"

  msa_kibana:
    image: openmsa/openmsa:msa2-kibana-2.4.0GA-7c00eae761d891388ae09c455b3ed61d21779237
    depends_on:
      - msa_es
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://msa_es:9200
      ELASTICSEARCH_HOSTS: http://msa_es:9200
    networks:
      default:
        aliases:
          - "msa-kibana"
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"
          
  msa_ai_ml:
    image: openmsa/openmsa:msa2-ai-ml-2.4.0GA-0e29906a56a3bba49ffce28a5beb2ff23999f5e3
    ports:
      - "8000:8000"
    volumes:
      - "/mnt/NASVolume/msa_ai_ml_db:/msa_proj/database"
    networks:
      default:
        aliases:
          - "msa-ai-ml"
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"          

  msa_cerebro:
    image: lmenezes/cerebro:0.9.2
    entrypoint:
      - /opt/cerebro/bin/cerebro
      - -Dhosts.0.host=http://msa_es:9200
    depends_on:
      - msa_es
    ports:
      - "9000:9000"
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"

  msa_dev:
    image: openmsa/openmsa:msa2-linuxdev-2.4.1-46b3e15e0e8a6f8301198e9311cdb56aafc02996
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.role==manager"
    volumes:
      - "/mnt/NASVolume/msa_entities:/opt/fmc_entities"
      - "/mnt/NASVolume/msa_repository:/opt/fmc_repository"
      - "/mnt/NASVolume/msa_api:/opt/ubi-jentreprise/generated/conf"
      - "/mnt/NASVolume/msa_dev:/opt/devops/"
      - "/mnt/NASVolume/msa_svn:/opt/svnroot"

