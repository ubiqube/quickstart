x-amqp-monitoring: &amqp-monitoring
  AMQP_ADDRESS: core-engine.monitoring
  AMQP_PASSWORD: simetraehcapa
  AMQP_PORT: "5672"
  AMQP_SERVER: msa-broker
  AMQP_USER: artemis
x-amqp-syslog: &amqp-syslog
  AMQP_ADDRESS: core-engine.syslog
  AMQP_PASSWORD: simetraehcapa
  AMQP_PORT: "5672"
  AMQP_SERVER: msa-broker
  AMQP_USER: artemis
x-es-configuration: &es-configuration
  ES_CREDENTIALS: c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
  ES_SERVERS: msa-es
x-logging: &logging
  driver: json-file
  options:
    max-buffer-size: 4m
    max-file: "5"
    max-size: 10m
    mode: non-blocking

services:
  msa-auth:
    depends_on:
      msa-db:
        condition: service_healthy
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: ubiqube
    healthcheck:
      interval: 30s
      retries: 5
      start_period: 1m
      test: timeout 10s bash -c ':> /dev/tcp/127.0.0.1/8080'
      timeout: 10s
    image: ubiqube/msa2-auth:sha-1363769d5a6994e21ef96dbd2701425227afc427
    restart: unless-stopped

  msa-front:
    container_name: msa_front
    depends_on:
      msa-api:
        condition: service_started
      msa-camunda:
        condition: service_started
      msa-es:
        condition: service_started
      msa-ui:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - curl -sk --fail https://localhost/msa_version/index.html
    image: ubiqube/msa2-front:sha-76db0af80b3428d5ba8867d64a1ea9c63ba8afbe
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - msa_front
    ports:
      - mode: host
        protocol: tcp
        published: 80
        target: 80
      - mode: host
        protocol: tcp
        published: 443
        target: 443
    restart: unless-stopped
    volumes:
      - msa_front_conf:/etc/nginx/custom_conf.d
    # uncomment one of the 2 sections below when installing a custom certificate
    # - Docker standard standalone installation
    # volumes:
    #    - "msa_front:/etc/nginx/ssl"
    # - Docker Swarm HA installation
    # volumes:
    #    - "/mnt/NASVolume/msa_front:/etc/nginx/ssl"

  msa-db:
    environment:
      CAMUNDA_DB: process-engine
      CAMUNDA_PASSWORD: camunda
      CAMUNDA_USER: camunda
      KEY_VAULT_DB: key_vault
      KEY_VAULT_USER: key_vault
      MAX_CONNECTIONS: 1600
      PG_DATABASE: POSTGRESQL
      PG_MODE: primary
      PG_PASSWORD: my_db_password
      PG_PRIMARY_PASSWORD: my_db_password
      PG_PRIMARY_PORT: 5432
      PG_PRIMARY_USER: postgres
      PG_ROOT_PASSWORD: my_db_password
      PG_USER: postgres
    healthcheck:
      interval: 30s
      retries: 5
      test:
        - CMD-SHELL
        - /usr/pgsql-12/bin/pg_isready -h localhost
      timeout: 20s
    image: ubiqube/msa2-db:sha-b06760885554a4212e87999a0d291ae607fbe687
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - db
    restart: unless-stopped
    shm_size: 1g
    volumes:
      - msa_db:/pgsqldata/pgsql

  msa-api:
    container_name: msa_api
    depends_on:
      msa-auth:
        condition: service_healthy
      msa-db:
        condition: service_started
      msa-es:
        condition: service_healthy
      msa-mongodb:
        condition: service_healthy
    env_file:
      - .env
    environment:
      <<: *es-configuration
      MANAGEMENT_TRACING_ENABLED: true
    healthcheck:
      interval: 10s
      retries: 3
      start_period: 90s
      test:
        - CMD-SHELL
        - curl -s --fail http://localhost:8480/actuator/health |jq -r '.status' |grep '^UP$$'
      timeout: 5s
    image: ubiqube/msa2-api:sha-3064b9c5dafd8b25b3cf60f931cead9b50d11460
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - msa_api
    restart: unless-stopped
    volumes:
      - msa_entities:/opt/fmc_entities
      - msa_repository:/opt/fmc_repository
      - rrd_repository:/opt/rrd
      - msa_dev:/opt/devops/
      - msa_api_logs:/opt/wildfly/logs
      - msa_api_keystore:/etc/pki/jentreprise

  msa-ui:
    restart: unless-stopped
    depends_on:
      msa-api:
        condition: service_started
    environment:
      - FEATURE_ADMIN=true
      - FEATURE_LICENCE=true
      - FEATURE_ALARMS=true
      - FEATURE_AI_ML=true
      - FEATURE_TOPOLOGY=true
      - FEATURE_PROFILE_AUDIT_LOGS=true
      - FEATURE_MICROSERVICE_BULK_OPERATION=false
      - FEATURE_EDIT_VARIABLES_IN_MICROSERVICE_CONSOLE=true
      - FEATURE_WORKFLOW_OWNER=false
      - FEATURE_PERMISSION_PROFILE_LABELS=false
      - FEATURE_BPM=true
      - UBIQUBE_ES_SECURITY_DISABLED=false
      - FEATURE_IMPORT_WITH_SAME_AND_UPPERRANK=true
      - FEATURE_REPOFOLDERLIST=[\"Datafiles\", \"Shared\"]
    healthcheck:
      test:
        - CMD-SHELL
        - curl --fail http://localhost:8080
    image: ubiqube/msa2-ui:e63571b8542204f0aaeaf8e1a5c8849062b97e1c
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - msa_ui

  msa-sms:
    restart: unless-stopped
    container_name: msa_sms
    image: ubiqube/msa2-sms:sha-7ebb676360248c0add52be932e25ad0d66447c87
    healthcheck:
      timeout: 5s
      retries: 10
      interval: 10s
      start_period: 30s
      test: ["CMD-SHELL", "/opt/sms/bin/sms -e ISALIVE -t 1 | grep -q OK || exit 1"]
    environment:
      <<: *es-configuration
    depends_on:
      msa-db:
        condition: service_healthy
      msa-es:
        condition: service_started
      msa-dev:
        condition: service_started
    ports:
      - target: 69
        published: 69
        protocol: udp
        mode: host
      - target: 5200
        published: 5200
        protocol: udp
        mode: host
    logging:
      <<: *logging
    volumes:
      - "msa_dev:/opt/devops/"
      - "msa_entities:/opt/fmc_entities"
      - "msa_repository:/opt/fmc_repository"
      - "msa_sms_logs:/opt/sms/logs"
      - "msa_svn:/opt/svnroot"
      - "msa_svn_ws:/opt/sms/spool/routerconfigs"
      - "msa_bulkfiles:/opt/sms/spool/parser"
      - "msa_bulkfiles_err:/opt/sms/spool/parser-error"
    networks:
      default:
        aliases:
          - "msa_sms"

  msa-parse:
    restart: unless-stopped
    container_name: msa_parse
    image: ubiqube/msa2-parse:sha-0478f488301f8718ab1aa235890017e7d6585536
    depends_on:
      msa-db:
        condition: service_healthy
      msa-es:
        condition: service_started
      msa-dev:
        condition: service_started
      msa-sms:
        condition: service_healthy
      msa-broker:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "/opt/sms/bin/sms -e ISALIVE -t 1 | grep -q OK || exit 1"]
    environment:
      <<: [*es-configuration, *amqp-syslog]
    logging:
      <<: *logging
    volumes:
      - "msa_dev:/opt/devops/"
      - "msa_parsebulkfiles:/opt/sms/spool/parser"
      - "msa_parsebulkfiles_err:/opt/sms/spool/parser-error"
    networks:
      default:
        aliases:
          - "msa_parse"

  msa-snmptrap:
    restart: unless-stopped
    container_name: msa_snmptrap
    image: ubiqube/msa2-snmptrap:sha-39c756057caf0dc3d60e481db8455e389c3a9c48
    depends_on:
      msa-db:
        condition: service_healthy
      msa-es:
        condition: service_started
      msa-dev:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "/opt/sms/bin/sms -e ISALIVE -t 1 | grep -q OK || exit 1"]
    environment:
      <<: *es-configuration
    ports:
      - target: 162
        published: 162
        protocol: udp
        mode: host
    logging:
      <<: *logging
    volumes:
      - "msa_dev:/opt/devops/"
      - "msa_repository:/opt/fmc_repository"
      - "msa_snmptrapbulkfiles:/opt/sms/spool/parser"
      - "msa_snmptrapbulkfiles_err:/opt/sms/spool/parser-error"
    networks:
      default:
        aliases:
          - "msa_snmptrap"

  msa-bud:
    restart: unless-stopped
    container_name: msa_bud
    image: ubiqube/msa2-bud:sha-e1dfe579387797a302fc07a44de70d602757c4b3
    healthcheck:
      timeout: 5s
      retries: 10
      interval: 10s
      start_period: 30s
      test: ["CMD-SHELL", "/opt/sms/bin/sms -e ISALIVE -t 1 | grep -q OK || exit 1"]
    depends_on:
      msa-db:
        condition: service_healthy
    logging:
      <<: *logging
    volumes:
      - "msa_bud_logs:/opt/bud/logs/"
    networks:
      default:
        aliases:
          - "msa_bud"

  msa-alarm:
    restart: unless-stopped
    depends_on:
      msa-db:
        condition: service_healthy
      msa-api:
        condition: service_healthy
      msa-es:
        condition: service_started
    environment:
      <<: *es-configuration
    healthcheck:
      interval: 10s
      retries: 10
      start_period: 30s
      test:
        - CMD-SHELL
        - /opt/sms/bin/sms -e ISALIVE -t 1 | grep -q OK || exit 1
      timeout: 5s
    image: ubiqube/msa2-alarm:sha-fd13e5d425f3a45ab84fe867419c98f7def010b6
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - msa_alarm
    volumes:
      - msa_sms_logs:/opt/sms/logs
      - msa_alarmbulkfiles:/opt/sms/spool/alarms
      - msa_alarmbulkfiles_err:/opt/sms/spool/alarms-error

  msa-mongodb:
    env_file:
      - .env
    #      ccla must match user created in mongo-init.js
    environment:
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-my_db_password}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://${DB_USER:-msaUser}:${DB_PASSWORD:-ubiqube38}@localhost:${DB_PORT:-27017}/${DB_NAME:-msa} --quiet
    image: ubiqube/msa2-mongodb:sha-9ccfad540f768c798eb02b80678ed429594245f0
    ports:
      - 27017:27017
    restart: unless-stopped
    volumes:
      - msa_mongodb_data:/data/db
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  msa-monitor-writer:
    depends_on:
      msa-broker:
        condition: service_started
      msa-mongodb:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - curl -s --fail http://localhost:9099/mon-writer/actuator/health |jq -r '.status' |grep '^UP$$'
    image: ubiqube/msa2-monitor-writer:sha-4b185f99faf7dce91c9406b6025ee672fe3d97e1
    restart: unless-stopped

  msa-monitoring:
    depends_on:
      msa-broker:
        condition: service_started
      msa-db:
        condition: service_healthy
      msa-dev:
        condition: service_started
      msa-es:
        condition: service_started
      msa-sms:
        condition: service_started
    environment:
      <<:
        - *es-configuration
        - *amqp-monitoring
      TARGET_MON: RRD
      #   possible values RRD, ES, AMQP
    healthcheck:
      test:
        - CMD-SHELL
        - /opt/sms/bin/sms -e ISALIVE -t 1 | grep -q OK || exit 1
    image: ubiqube/msa2-monitoring:sha-f7ba76eac90d1f6c5ff2807d8b40c61b684b0d73
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - msa_monitoring
    restart: unless-stopped
    volumes:
      - msa_dev:/opt/devops/
      - msa_entities:/opt/fmc_entities
      - msa_repository:/opt/fmc_repository
      - rrd_repository:/opt/rrd
      - msa_sms_logs:/opt/sms/logs
      - msa_monitbulkfiles:/opt/sms/spool/parser
      - msa_monitbulkfiles_err:/opt/sms/spool/parser-error

  msa-rsyslog:
    restart: unless-stopped
    container_name: msa_rsyslog
    depends_on:
      msa-broker:
        condition: service_started
    image: ubiqube/msa2-rsyslog:sha-80145f5115e4ed1a07d3a7532a6d6d92997b5e13
    environment:
      # ACTIONTYPE: omudpspoof or omkafka
      # configure a specific port for TLS. Default is 6514
      # TLS_SYSLOG_PORT: 6514
      ACTIONTYPE: "omamqp1"
      <<: *amqp-syslog
    ports:
      - target: 514
        published: 514
        protocol: udp
        mode: host
      - target: 514
        published: 514
        protocol: tcp
        mode: host
      - target: 6514
        published: 6514
        protocol: tcp
        mode: host
    networks:
      default:
        aliases:
          - "msa_rsyslog"
    logging:
      <<: *logging

  msa-broker:
    environment:
      ARTEMIS_PASSWORD: simetraehcapa
      ARTEMIS_USER: artemis
      EXTRA_ARGS: --http-host 0.0.0.0 --relax-jolokia --clustered --addresses core-engine.syslog:anycast,core-engine.monitoring:anycast --queues core-engine.syslog:anycast,core-engine.monitoring:anycast
    healthcheck:
      test: ./bin/artemis check node --user=$${ARTEMIS_USER} --password=$${ARTEMIS_PASSWORD} --silent &>/dev/null
    image: docker.io/ubiqube/msa2-broker:sha-416f94725b1a8f8965f1317faa0facfa739cb1d1
    logging:
      <<: *logging
    volumes:
      - msa_broker:/var/lib/artemis-instance

  msa-camunda:
    depends_on:
      msa-db:
        condition: service_healthy
    environment:
      DB_DRIVER: org.postgresql.Driver
      DB_PASSWORD: camunda
      DB_URL: jdbc:postgresql://msa-db:5432/process-engine
      DB_USERNAME: camunda
      DB_VALIDATE_ON_BORROW: "true"
      DB_VALIDATION_QUERY: SELECT 1
      WAIT_FOR: msa-db:5432
      WAIT_FOR_TIMEOUT: 60
    healthcheck:
      interval: 10s
      retries: 3
      start_period: 90s
      test:
        - CMD-SHELL
        - curl -s --fail http://localhost:8080/actuator/health |jq -r '.status' |grep '^UP$$'
      timeout: 5s
    image: ubiqube/msa2-camunda:sha-75696d4da63a1e0b854bb7a10f6a547a433f6614
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - camunda
    restart: unless-stopped

  msa-es:
    container_name: msa_es
    environment:
      <<: *es-configuration
      ES_JAVA_OPTS: -Xms512m -Xmx1024m
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      script.painless.regex.enabled: "true"
    healthcheck:
      interval: 10s
      retries: 30
      start_period: 45s
      test: >
        curl -s -H "Authorization: Basic $${ES_CREDENTIALS}" 'http://localhost:9200/_cluster/health?pretty' |jq -e '.status == "green"'
      timeout: 2s
    image: ubiqube/msa2-es:sha-9cde6c402e4a109e0db66ee5c8dab77ce373fe17
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - msa_es
    restart: unless-stopped
    ulimits:
      memlock:
        hard: -1
        soft: -1
    volumes:
      - msa_es:/usr/share/elasticsearch/data
      - msa_es_config:/usr/share/elasticsearch/config

  msa-cerebro:
    container_name: msa_cerebro
    depends_on:
      msa-es:
        condition: service_started
    entrypoint:
      - /opt/cerebro/bin/cerebro
      - -Dhosts.0.host=http://msa-es:9200
    environment:
      AUTH_TYPE: basic
      BASIC_AUTH_PWD: N@X{M4tfw'5%)+35
      BASIC_AUTH_USER: cerebro
    healthcheck:
      test: curl --fail http://localhost:9000/
    image: ubiqube/msa2-cerebro:sha-3ad010cc07d5f829d75af785e360fcc58968856c
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - msa_cerebro
    ports:
      - 9000:9000
    restart: unless-stopped

  msa-kibana:
    depends_on:
      msa-es:
        condition: service_started
    environment:
      <<: *es-configuration
      ELASTICSEARCH_HOSTS: http://msa-es:9200
      ELASTICSEARCH_URL: http://msa-es:9200
    healthcheck:
      test: curl -k --fail http://localhost:5601/kibana/
    image: ubiqube/msa2-kibana:sha-1bef1c0c70f779bb545ecb5837d7df3b8c75e0dd
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - msa_kibana
    ports:
      - 5601:5601
    restart: unless-stopped

  msa-dev:
    healthcheck:
      test:
        - CMD-SHELL
        - test -f /usr/bin/install_libraries.sh || echo false
    image: ubiqube/msa2-linuxdev:sha-51af2dfd785f01e0d8a35071738919b561e5224f
    #build: ./lab/msa_dev
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - msa_dev
    restart: unless-stopped
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - msa_entities:/opt/fmc_entities
      - msa_repository:/opt/fmc_repository
      - msa_dev:/opt/devops/

  msa-smtp:
    environment:
      ALLOWED_SENDER_DOMAINS: ""
      ALLOW_EMPTY_SENDER_DOMAINS: "true"
      HOSTNAME: msa-smtp
      # RELAYHOST: <MTA ip>:25
      POSTFIX_message_size_limit: 2097152
    image: boky/postfix:4.2.1-alpine
    restart: unless-stopped

  msa-linux-me:
    container_name: linux_me
    # use local image for quickstart dev => for release: make sure the changes are ported to msa-docker and uncomment the line below
    image: ubiqube/msa2-linuxme:sha-c6d032519e4b9ed8dc706cccd3b6d4aac3b8dc94
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - DAC_READ_SEARCH
      - sys_rawio
    ports:
      - "2224:22"
    devices:                     # required for dmidecode used by polld/asset
      - "/dev/mem:/dev/mem"
    hostname: linux-me
    privileged: true
    networks:
      default:
        aliases:
          - "linux_me"
        ipv4_address: 172.20.0.101
    logging:
      <<: *logging
    restart: unless-stopped

  msa-linux-me-2:
    container_name: linux_me_2
    # use local image for quickstart dev => for release: make sure the changes are ported to msa-docker and uncomment the line below
    image: ubiqube/msa2-linuxme:sha-abebaa1367d8186067268acb6e4355e107e77e8d
   # build: ./lab/linux.me
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - DAC_READ_SEARCH
      - sys_rawio
    ports:
      - "2225:22"
    devices:                     # required for dmidecode used by polld/asset
      - "/dev/mem:/dev/mem"
    hostname: linux-me-2
    privileged: true
    networks:
      default:
        aliases:
          - "linux_me_2"
        ipv4_address: 172.20.0.102
    logging:
      <<: *logging
    restart: unless-stopped

  msa2-es-ilm:
    container_name: msa2_es-ilm
    # healthcheck:
    #  test: ["CMD-SHELL", "find /opt/msa2-es-ilm/log/log_retention.log -type f -mmin -10"]
    depends_on:
      msa-es:
        condition: service_started
    environment:
      <<: *es-configuration
      ELASTICSEARCH_URL: msa_es:9200
      UBI_ES_ALARM_INDEX_MULTIPLE_TTL: '*|90d'
      UBI_ES_AUDIT_INDEX_MULTIPLE_TTL: '*|30d'
      UBI_ES_CACHE_INDEX_DEFAULT_TTL: 1w
      UBI_ES_DELETE_SCROLL_SIZE: "4000"
      UBI_ES_ILM_LOG_CRONTAB: '*/2 * * * * root php /opt/ubi-es-ilm/log_retention_management.php --verbose=3 > /proc/1/fd/1 2>&1'
      # For elasticsearch scripts /opt/ubi-es-ilm/log_retention_management.php
      # UBI_ES_INDEX_MULTIPLE_TTL:        "type:traffic|7d,type:event|30d,*|90d"
      UBI_ES_INDEX_MULTIPLE_TTL: '*|30d'
      UBI_ES_LOG_DETENTION_DELETE: "true"
      UBI_ES_LOG_SEARCH_INDEX_LIST: ubilogs
      UBI_ES_MAX_DOCS: ""
      UBI_ES_RETENTION_ALARM_INDEX_NAME: ubialarm*
      UBI_ES_RETENTION_AUDIT_INDEX_NAME: ubiaudit*
      UBI_ES_RETENTION_INDEX_NAME: ubilogs*
    image: ubiqube/msa2-es-ilm:sha-c64943ece208ed4c96b641735358540bc0c2cd3a
    networks:
      default:
        aliases:
          - msa2_es-ilm
    restart: unless-stopped
    volumes:
      - msa2_es-ilm:/opt/msa2-es-ilm

  msa-zipkin:
    image: docker.io/openzipkin/zipkin
    environment:
      STORAGE_TYPE: mem
      #STORAGE_TYPE: elasticsearch
      #ES_HOSTS: http://msa-es:9200
      #ES_USERNAME: superuser
      #ES_PASSWORD: x^ZyuGM6~u=+fY2G
    ports:
      - target: 9411
        published: 9411
        protocol: tcp
        mode: ingress

volumes:
  msa_broker:
  msa_db:
  msa_mongodb_data:
  msa_dev:
  msa_entities:
  msa_repository:
  msa_es:
  msa_es_config:
  rrd_repository:
  msa_api_logs:
  msa_api_keystore:
  msa_sms_logs:
  msa_bud_logs:
  msa_front:
  msa_front_conf:
  msa_svn:
  msa_svn_ws:
  msa_ai_ml_db:
  rsyslog_conf:
  msa_bulkfiles:
  msa_bulkfiles_err:
  msa_parsebulkfiles:
  msa_parsebulkfiles_err:
  msa_snmptrapbulkfiles:
  msa_snmptrapbulkfiles_err:
  msa_monitbulkfiles:
  msa_monitbulkfiles_err:
  msa_alarmbulkfiles:
  msa_alarmbulkfiles_err:
  msa2_es-ilm:

networks:
  default:
    name: quickstart_default
    ipam:
      config:
        - subnet: 172.20.0.0/24
    driver_opts:
      encrypted: "true"
