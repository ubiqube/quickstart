version: "3.8"

x-es-configuration: &es-configuration
    ES_CREDENTIALS: c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
    ES_SERVERS: "msa-es"

x-logging: &logging
  driver: "json-file"
  options:
    mode: non-blocking
    max-buffer-size: "4m"
    max-size: "10m"
    max-file: "5"

services:
  msa-front:
    restart: unless-stopped
    container_name: msa_front
    image: openmsa/openmsa:msa2-front-2.8.10-45a3e2639d30aebbed9eec90df8a1b56fb081922
    healthcheck:
      test: ["CMD-SHELL", "curl -k --fail https://localhost"]
    depends_on:
      msa-ui:
        condition: service_healthy
      msa-api:
        condition: service_started
      msa-es:
        condition: service_started
      camunda:
        condition: service_started
      msa-rsyslog:
        condition: service_started
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 162
        published: 162
        protocol: udp
        mode: host
    logging:
      driver: "json-file"
      options:
        mode: non-blocking
        max-buffer-size: "4m"
        max-size: "10m"
        max-file: "5"
    volumes:
        - "msa_front_conf:/etc/nginx/custom_conf.d"
    networks:
      default:
        aliases:
          - "msa_front"   #
    # uncomment one of the 2 sections below when installing a custom certificate
    # - Docker standard standalone installation
    #volumes:
    #    - "msa_front:/etc/nginx/ssl"
    # - Docker Swarm HA installation
    #volumes:
    #    - "/mnt/NASVolume/msa_front:/etc/nginx/ssl"

  db:
    restart: unless-stopped
    container_name: msa_db
    image: openmsa/openmsa:msa2-db-2.8.10-b41f3167eff7d84d2f64234dcc581816c769bf1d
    healthcheck:
      test: ["CMD-SHELL", "/usr/pgsql-12/bin/pg_isready -h localhost"]
      timeout: 20s
      interval: 30s
      retries: 5
    environment:
      CAMUNDA_PASSWORD: camunda
      CAMUNDA_DB: process-engine
      CAMUNDA_USER: camunda
      KEY_VAULT_USER: key_vault
      KEY_VAULT_DB: key_vault
      PG_MODE: primary
      PG_PRIMARY_USER: postgres
      PG_PRIMARY_PASSWORD: my_db_password
      PG_USER: postgres
      PG_PASSWORD: my_db_password
      PG_DATABASE: POSTGRESQL
      PG_ROOT_PASSWORD: my_db_password
      PG_PRIMARY_PORT: 5432
      MAX_CONNECTIONS: 1600
    shm_size: 1g
    logging:
      <<: *logging
    volumes:
      - "msa_db:/pgsqldata/pgsql"

  msa-api:
    restart: unless-stopped
    container_name: msa_api
    image: openmsa/openmsa:msa2-api-2.8.10-e319faf63a121502937e0710f29dab394db2f532
    healthcheck:
      test: ["CMD-SHELL", "curl -s --fail http://localhost:8480/actuator/health | grep -q UP"]
      retries: 3
      timeout: 5s
      interval: 10s
      start_period: 90s
    depends_on:
      db:
        condition: service_healthy
      msa-es:
        condition: service_started
    environment:
      <<: *es-configuration
      UBIQUBE_CAPTCHA_SECRET_KEY: 6Ld2zF4dAAAAABWD9Q6QAhBql_CIynUeVKaTiBgT
    logging:
      <<: *logging
    volumes:
      - "msa_api:/opt/ubi-jentreprise/generated/conf"
      - "msa_entities:/opt/fmc_entities"
      - "msa_repository:/opt/fmc_repository"
      - "rrd_repository:/opt/rrd"
      - "msa_dev:/opt/devops/"
      - "msa_api_logs:/opt/wildfly/logs/"
      - "msa_api_logs:/opt/wildfly/logs/processLog"
      - "msa_api_keystore:/etc/pki/jentreprise"
    networks:
      default:
        aliases:
          - "msa_api"

  msa-ui:
    restart: unless-stopped
    container_name: msa_ui
    image: openmsa/openmsa:msa2-ui-2.8.10-b0d35cb691843f221e34d499caf7ff8b2131f23d
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080"]
    depends_on:
      msa-api:
        condition: service_started
    environment:
    - FEATURE_ADMIN=true
    - FEATURE_REPOSITORY=true
    - FEATURE_CONNECTION_STATUS=true
    - FEATURE_ALARMS=true
    - FEATURE_LICENCE=true
    - FEATURE_TOPOLOGY=true
    - FEATURE_MONITORING_PROFILES=true
    - FEATURE_PROFILE_AUDIT_LOGS=true
    - FEATURE_PERMISSION_PROFILES=true
    - FEATURE_AI_ML=false
    - FEATURE_MICROSERVICE_BULK_OPERATION=false
    - FEATURE_EDIT_VARIABLES_IN_MICROSERVICE_CONSOLE=true
    - FEATURE_WORKFLOW_OWNER=false
    - FEATURE_PERMISSION_PROFILE_LABELS=false
    - FEATURE_BPM=true
    - UBIQUBE_ES_SECURITY_DISABLED=true
    - FEATURE_ALARMS_AUTO_ACKNOWLEDGE=true
    - FEATURE_IMPORT_WITH_SAME_AND_UPPERRANK=true
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - "msa_ui"

  msa-sms:
    restart: unless-stopped
    container_name: msa_sms
    image: openmsa/openmsa:msa2-sms-2.8.10-06c680ff5de2148cddb4ede33fd98834d5cf52da
    healthcheck:
      timeout: 5s
      retries: 10
      interval: 10s
      start_period: 30s
      test: ["CMD-SHELL", "/etc/init.d/ubi-sms status | grep -q 'service seems UP' || exit 1"]
    environment:
      <<: *es-configuration
    cap_add:
      - NET_ADMIN
    depends_on:
      db:
        condition: service_healthy
      msa-es:
        condition: service_started
      msa-dev:
        condition: service_started
    ports:
      - target: 69
        published: 69
        protocol: udp
        mode: host
      - target: 5200
        published: 5200
        protocol: udp
        mode: host
    logging:
      <<: *logging
    volumes:
      - "msa_dev:/opt/devops/"
      - "msa_entities:/opt/fmc_entities"
      - "msa_repository:/opt/fmc_repository"
      - "msa_sms_logs:/opt/sms/logs"
      - "msa_svn:/opt/svnroot"
      - "msa_svn_ws:/opt/sms/spool/routerconfigs"
      - "msa_bulkfiles:/opt/sms/spool/parser"
      - "msa_bulkfiles_err:/opt/sms/spool/parser-error"
    networks:
      default:
        aliases:
          - "msa_sms"

  msa-event:
    depends_on:
      - db
      - msa-es
      - msa-dev
      - msa-sms
    healthcheck:
      test: ["CMD-SHELL", "/etc/init.d/ubi-sms status | grep -q 'service seems UP' || exit 1"]
    image: openmsa/openmsa:msa2-event-2.8.10-51bd24c1e5a4fb438fa21df5b4595ae1a5d003a2
    environment:
      <<: *es-configuration
    logging:
      driver: "json-file"
      options:
        mode: non-blocking
        max-buffer-size: "4m"
        max-size: "20m"
        max-file: "5"
    volumes:
      - "msa_dev:/opt/devops/"
      - "msa_bulkfiles:/opt/sms/spool/parser"
      - "msa_bulkfiles_err:/opt/sms/spool/parser-error"
    networks:
      default:
        aliases:
          - "msa_event"
  msa-bud:
    restart: unless-stopped
    container_name: msa_bud
    image: openmsa/openmsa:msa2-bud-2.8.10-29c89bed5e95a1368e69f221831d385539e03909
    healthcheck:
      timeout: 5s
      retries: 10
      interval: 10s
      start_period: 30s
      test: ["CMD-SHELL", "/etc/init.d/ubi-bud status | grep -q 'service seems UP' || exit 1"]
    depends_on:
      db:
        condition: service_healthy
    logging:
      <<: *logging
    volumes:
      - "msa_bud_logs:/opt/bud/logs/"
    networks:
      default:
        aliases:
          - "msa_bud"

  msa-alarm:
    restart: unless-stopped
    container_name: msa_alarm
    image: openmsa/openmsa:msa2-alarm-2.8.10-0fc68a6c34435181fdd9031c3bc44fe19492a75b
    healthcheck:
      timeout: 5s
      retries: 10
      interval: 10s
      start_period: 30s
      test: ["CMD-SHELL", "/etc/init.d/ubi-alarm status | grep -q 'service seems UP' || exit 1"]
    depends_on:
      db:
        condition: service_healthy
      msa-es:
        condition: service_started
    environment:
      <<: *es-configuration
    logging:
      <<: *logging
    volumes:
      - "msa_sms_logs:/opt/sms/logs"
      - "msa_alarmbulkfiles:/opt/sms/spool/alarms"
      - "msa_alarmbulkfiles_err:/opt/sms/spool/alarms-error"
    networks:
      default:
        aliases:
          - "msa_alarm"

  msa-monitoring:
    restart: unless-stopped
    container_name: msa_monitoring
    image: openmsa/openmsa:msa2-monitoring-2.8.10-47bf8e62bb9e8d6de920153eb25d6e6ce22b968c
    healthcheck:
      test: ["CMD-SHELL", "/etc/init.d/ubi-poll status | grep -q 'service seems UP' || exit 1"]
    depends_on:
      db:
        condition: service_healthy
      msa-es:
        condition: service_started
      msa-dev:
        condition: service_started
      msa-sms:
        condition: service_started
    environment:
      ES_MON: "yes"
      <<: *es-configuration
    logging:
      <<: *logging
    volumes:
      - "msa_dev:/opt/devops/"
      - "msa_entities:/opt/fmc_entities"
      - "msa_repository:/opt/fmc_repository"
      - "rrd_repository:/opt/rrd"
      - "msa_sms_logs:/opt/sms/logs"
      - "msa_monitbulkfiles:/opt/sms/spool/parser"
      - "msa_monitbulkfiles_err:/opt/sms/spool/parser-error"
    networks:
      default:
        aliases:
          - "msa_monitoring"

  msa-rsyslog:
    restart: unless-stopped
    container_name: msa_rsyslog
    depends_on:
      - msa-event
    image: openmsa/openmsa:msa2-rsyslog-2.8.10-02bb1d60385f106e14eb6d940e7fc69a3e16722d
    # environment:
      # enable omfwd acxtion type for syslog Forwarding Output Module
      # https://www.rsyslog.com/doc/v8-stable/configuration/modules/omfwd.html
      # default
      # ACTIONTYPE: "omfwd"
      # configure a specific port for TLS. Default is 6514
      # TLS_SYSLOG_PORT: 6514
    ports:
      - target: 514
        published: 514
        protocol: udp
        mode: host
      - target: 514
        published: 514
        protocol: tcp
        mode: host
      - target: 6514
        published: 6514
        protocol: tcp
        mode: host
    networks:
      default:
        aliases:
          - "msa_rsyslog"
    logging:
      <<: *logging

  camunda:
    restart: unless-stopped
    container_name: msa_camunda
    depends_on:
      db:
        condition: service_healthy
    image: openmsa/openmsa:msa2-camunda-2.8.10-4bd40043f46fa18830d349b481821689448d4949
    environment:
      DB_DRIVER: org.postgresql.Driver
      DB_URL: 'jdbc:postgresql://db:5432/process-engine'
      DB_USERNAME: camunda
      DB_PASSWORD: camunda
      DB_VALIDATE_ON_BORROW: 'true'
      WAIT_FOR: 'db:5432'
      WAIT_FOR_TIMEOUT: 60
    logging:
      <<: *logging

  msa-es:
    restart: unless-stopped
    container_name: msa_es
    image: openmsa/openmsa:msa2-es-2.8.10-68c809af30fb22ed1b68c9ab9598132be2166875
    healthcheck:
      test: ["CMD-SHELL", "test -f /home/install/init-done && curl -s -XGET -H 'Authorization: Basic c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc='  'http://localhost:9200/_cluster/health?pretty' | grep -q 'status.*green' || exit 1"]
      timeout: 2s
      retries: 10
      interval: 10s
      start_period: 30s
    environment:
      discovery.type: "single-node"
      script.painless.regex.enabled: "true"
      bootstrap.memory_lock: "true"
      ES_JAVA_OPTS: "-Xms512m -Xmx1024m"
      <<: *es-configuration
    logging:
      <<: *logging
    volumes:
      - "msa_es:/usr/share/elasticsearch/data"
      - "msa_es_config:/usr/share/elasticsearch/config"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9300:9300"
      - "9200:9200"
      - "9300:9300/udp"
      - "9200:9200/udp"
    networks:
      default:
        aliases:
          - "msa_es"

  msa-cerebro:
    restart: unless-stopped
    container_name: msa_cerebro
    image: openmsa/openmsa:msa2-cerebro-2.8.10-20fca37feb399b676963d531aaaab37b10588961
    environment:
      AUTH_TYPE: basic
      BASIC_AUTH_USER: cerebro
      BASIC_AUTH_PWD: "N@X{M4tfw'5%)+35"
    entrypoint:
      - /opt/cerebro/bin/cerebro
      - -Dhosts.0.host=http://msa_es:9200
    depends_on:
      msa-es:
        condition: service_started
    logging:
      <<: *logging
    ports:
    - "9000:9000"
    networks:
      default:
        aliases:
          - "msa_cerebro"

  msa-kibana:
    restart: unless-stopped
    container_name: msa_kibana
    image: openmsa/openmsa:msa2-kibana-2.8.10-46a9280639d973021a841c3792aed3948846d73a
    depends_on:
      msa-es:
        condition: service_started
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: "http://msa_es:9200"
      ELASTICSEARCH_HOSTS: "http://msa_es:9200"
      <<: *es-configuration
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - "msa_kibana"

  msa-dev:
    restart: unless-stopped
    container_name: msa_dev
    #build: ./lab/msa_dev
    image: openmsa/openmsa:msa2-linuxdev-2.8.10-dca5fd89e1ca0f4f9ea046e37f112964384c6871
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:ro"
      - "msa_entities:/opt/fmc_entities"
      - "msa_repository:/opt/fmc_repository"
      - "msa_dev:/opt/devops/"
      - "msa_front_conf:/etc/nginx/custom_conf.d"
    networks:
      default:
        aliases:
          - "msa_dev"
    logging:
      <<: *logging

  linux-me:
    restart: unless-stopped
    container_name: linux_me
    # use local image for quickstart dev => for release: make sure the changes are ported to msa-docker and uncomment the line below
    image: openmsa/openmsa:msa2-linuxme-2.8.10-e84bc462bf01d4956c4a1895b66507d4ba47a227
    #build: ./lab/linux.me
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - DAC_READ_SEARCH
      - sys_rawio
    ports:
      - "2224:22"
    devices:                     # required for dmidecode used by polld/asset
      - "/dev/mem:/dev/mem"
    hostname: linux-me
    privileged: true
    networks:
      default:
        aliases:
          - "linux_me"
        ipv4_address: 172.20.0.101
    logging:
      <<: *logging

  linux-me-2:
    restart: unless-stopped
    container_name: linux_me_2
    # use local image for quickstart dev => for release: make sure the changes are ported to msa-docker and uncomment the line below
    image: openmsa/openmsa:msa2-linuxme-2.8.10-e84bc462bf01d4956c4a1895b66507d4ba47a227
    #build: ./lab/linux.me
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - DAC_READ_SEARCH
      - sys_rawio
    ports:
      - "2225:22"
    devices:                     # required for dmidecode used by polld/asset
      - "/dev/mem:/dev/mem"
    hostname: linux-me-2
    privileged: true
    networks:
      default:
        aliases:
          - "linux_me_2"
        ipv4_address: 172.20.0.102
    logging:
      <<: *logging

volumes:
  msa_api:
  msa_db:
  msa_dev:
  msa_entities:
  msa_repository:
  msa_es:
  msa_es_config:
  rrd_repository:
  msa_api_logs:
  msa_api_keystore:
  msa_sms_logs:
  msa_bud_logs:
  msa_front:
  msa_front_conf:
  msa_svn:
  msa_svn_ws:
  msa_ai_ml_db:
  rsyslog_conf:
  msa_bulkfiles:
  msa_bulkfiles_err:
  msa_monitbulkfiles:
  msa_monitbulkfiles_err:
  msa_alarmbulkfiles:
  msa_alarmbulkfiles_err:

networks:
  default:
    name: quickstart_default
    ipam:
      config:
        - subnet: 172.20.0.0/24
    driver_opts:
      encrypted: "true"
