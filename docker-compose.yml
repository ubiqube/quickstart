x-es-configuration: &es-configuration
    ES_CREDENTIALS: c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=
    ES_SERVERS: "msa-es"

x-logging: &logging
  driver: "json-file"
  options:
    mode: non-blocking
    max-buffer-size: "4m"
    max-size: "10m"
    max-file: "5"

x-amqp-syslog: &amqp-syslog
  AMQP_SERVER: "msa-broker"
  AMQP_PORT: "5672"
  AMQP_ADDRESS: "core-engine.syslog"
  AMQP_USER: "artemis"
  AMQP_PASSWORD: "simetraehcapa"

services:
  msa-auth:
    depends_on:
      msa-db:
        condition: service_healthy
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: ubiqube
    healthcheck:
      interval: 30s
      retries: 5
      start_period: 1m
      test: timeout 10s bash -c ':> /dev/tcp/127.0.0.1/8080'
      timeout: 10s
    image: ubiqube/msa2-auth:sha-5ae1e0066d52e813c8fd12ac56c371cb79774e5c
    restart: unless-stopped

  msa-front:
    container_name: msa_front
    depends_on:
      msa-camunda:
        condition: service_started
      msa-api:
        condition: service_started
      msa-es:
        condition: service_started
      msa-ui:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - curl -k --fail https://localhost
    image: ubiqube/msa2-front:sha-f3495f55a3d6ea71e40dc493a5cc6628038653c9
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - msa_front
    ports:
      - mode: host
        protocol: tcp
        published: 80
        target: 80
      - mode: host
        protocol: tcp
        published: 443
        target: 443
    restart: unless-stopped
    volumes:
      - msa_front_conf:/etc/nginx/custom_conf.d
    # uncomment one of the 2 sections below when installing a custom certificate
    # - Docker standard standalone installation
    # volumes:
    #    - "msa_front:/etc/nginx/ssl"
    # - Docker Swarm HA installation
    # volumes:
    #    - "/mnt/NASVolume/msa_front:/etc/nginx/ssl"

  msa-db:
    environment:
      CAMUNDA_DB: process-engine
      CAMUNDA_PASSWORD: camunda
      CAMUNDA_USER: camunda
      KEY_VAULT_DB: key_vault
      KEY_VAULT_USER: key_vault
      MAX_CONNECTIONS: 1600
      PG_DATABASE: POSTGRESQL
      PG_MODE: primary
      PG_PASSWORD: my_db_password
      PG_PRIMARY_PASSWORD: my_db_password
      PG_PRIMARY_PORT: 5432
      PG_PRIMARY_USER: postgres
      PG_ROOT_PASSWORD: my_db_password
      PG_USER: postgres
    healthcheck:
      interval: 30s
      retries: 5
      test:
        - CMD-SHELL
        - /usr/pgsql-12/bin/pg_isready -h localhost
      timeout: 20s
    image: ubiqube/msa2-db:sha-05c2d43fb3f8b7be0e735f3ecf16e8ceb4730163
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - db
    restart: unless-stopped
    shm_size: 1g
    volumes:
      - msa_db:/pgsqldata/pgsql

  msa-mongodb:
    env_file:
      - .env
    #      ccla must match user created in mongo-init.js
    environment:
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-my_db_password}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://${DB_USER:-msaUser}:${DB_PASSWORD:-ubiqube38}@localhost:${DB_PORT:-27017}/${DB_NAME:-msa} --quiet
    image: ubiqube/msa2-mongodb:sha-90b2c29c1e13bc7b82cfadb00cba97ac856fd642
    ports:
      - 27017:27017
    restart: unless-stopped
    volumes:
      - msa_mongodb_data:/data/db
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro


  msa-api:
    container_name: msa_api
    depends_on:
      msa-auth:
        condition: service_healthy
      msa-db:
        condition: service_started
      msa-es:
        condition: service_healthy
      msa-mongodb:
        condition: service_healthy
    environment:
      <<: *es-configuration
      MANAGEMENT_TRACING_ENABLED: true
    healthcheck:
      interval: 10s
      retries: 3
      start_period: 90s
      test:
        - CMD-SHELL
        - curl -s --fail http://localhost:8480/actuator/health |jq -r '.status' |grep '^UP$$'
      timeout: 5s
    image: ubiqube/msa2-api:sha-6b6c74e6dfce1ecdb9dfe2a4fec80661d68b6491
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - msa_api
    restart: unless-stopped
    volumes:
      - msa_entities:/opt/fmc_entities
      - msa_repository:/opt/fmc_repository
      - rrd_repository:/opt/rrd
      - msa_dev:/opt/devops/
      - msa_api_logs:/opt/wildfly/logs
      - msa_api_keystore:/etc/pki/jentreprise

  msa-ui:
    restart: unless-stopped
    container_name: msa_ui
    image: ubiqube/msa2-ui:d179e96766d33f5132788d280c212b1cefa8094d
    #image: ubiqube/msa2-ui:test
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080"]
    depends_on:
      msa-api:
        condition: service_started
    environment:
    - FEATURE_ADMIN=true
    - FEATURE_REPOSITORY=true
    - FEATURE_CONNECTION_STATUS=true
    - FEATURE_ALARMS=true
    - FEATURE_LICENCE=true
    - FEATURE_TOPOLOGY=true
    - FEATURE_MONITORING_PROFILES=true
    - FEATURE_PROFILE_AUDIT_LOGS=true
    - FEATURE_PERMISSION_PROFILES=true
    - FEATURE_AI_ML=false
    - FEATURE_MICROSERVICE_BULK_OPERATION=false
    - FEATURE_EDIT_VARIABLES_IN_MICROSERVICE_CONSOLE=true
    - FEATURE_WORKFLOW_OWNER=false
    - FEATURE_PERMISSION_PROFILE_LABELS=false
    - FEATURE_BPM=true
    - UBIQUBE_ES_SECURITY_DISABLED=true
    - FEATURE_ALARMS_AUTO_CLEARANCE=true
    - FEATURE_IMPORT_WITH_SAME_AND_UPPERRANK=true
    - FEATURE_REPOFOLDERLIST=[\"Datafiles\"]
    - FEATURE_ALARM_TROUBLE_TICKET=true
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - "msa_ui"

  msa-sms:
    restart: unless-stopped
    container_name: msa_sms
    image: ubiqube/msa2-sms:sha-2009538eb6badbd2aeffeadd79f60736f28aa06c
    healthcheck:
      timeout: 5s
      retries: 10
      interval: 10s
      start_period: 30s
      test: ["CMD-SHELL", "/opt/sms/bin/sms -e ISALIVE -t 1 | grep -q OK || exit 1"]
    environment:
      <<: *es-configuration
    depends_on:
      msa-db:
        condition: service_healthy
      msa-es:
        condition: service_started
      msa-dev:
        condition: service_started
    ports:
      - target: 69
        published: 69
        protocol: udp
        mode: host
      - target: 5200
        published: 5200
        protocol: udp
        mode: host
    logging:
      <<: *logging
    volumes:
      - "msa_dev:/opt/devops/"
      - "msa_entities:/opt/fmc_entities"
      - "msa_repository:/opt/fmc_repository"
      - "msa_sms_logs:/opt/sms/logs"
      - "msa_svn:/opt/svnroot"
      - "msa_svn_ws:/opt/sms/spool/routerconfigs"
      - "msa_bulkfiles:/opt/sms/spool/parser"
      - "msa_bulkfiles_err:/opt/sms/spool/parser-error"
    networks:
      default:
        aliases:
          - "msa_sms"

  msa-parse:
    restart: unless-stopped
    container_name: msa_parse
    image: ubiqube/msa2-parse:sha-ac897bd9df8105fdca6d4a686b601e7c19b27fa3
    depends_on:
      msa-db:
        condition: service_healthy
      msa-es:
        condition: service_started
      msa-dev:
        condition: service_started
      msa-sms:
        condition: service_healthy
      msa-broker:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "/opt/sms/bin/sms -e ISALIVE -t 1 | grep -q OK || exit 1"]
    environment:
      <<: [*es-configuration, *amqp-syslog]
    logging:
      <<: *logging
    volumes:
      - "msa_dev:/opt/devops/"
      - "msa_parsebulkfiles:/opt/sms/spool/parser"
      - "msa_parsebulkfiles_err:/opt/sms/spool/parser-error"
    networks:
      default:
        aliases:
          - "msa_parse"

  msa-snmptrap:
    restart: unless-stopped
    container_name: msa_snmptrap
    image: ubiqube/msa2-snmptrap:sha-bdce4f77eae69289d8cd6f0cca43c2ff3eb8fc2d
    depends_on:
      msa-db:
        condition: service_healthy
      msa-es:
        condition: service_started
      msa-dev:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "/opt/sms/bin/sms -e ISALIVE -t 1 | grep -q OK || exit 1"]
    environment:
      <<: *es-configuration
    ports:
      - target: 162
        published: 162
        protocol: udp
        mode: host
    logging:
      <<: *logging
    volumes:
      - "msa_dev:/opt/devops/"
      - "msa_repository:/opt/fmc_repository"
      - "msa_snmptrapbulkfiles:/opt/sms/spool/parser"
      - "msa_snmptrapbulkfiles_err:/opt/sms/spool/parser-error"
    networks:
      default:
        aliases:
          - "msa_snmptrap"

  msa-bud:
    restart: unless-stopped
    container_name: msa_bud
    image: ubiqube/msa2-bud:sha-f5a4c6439edf1af8d61b8f50befddf1909415fc5
    healthcheck:
      timeout: 5s
      retries: 10
      interval: 10s
      start_period: 30s
      test: ["CMD-SHELL", "/opt/sms/bin/sms -e ISALIVE -t 1 | grep -q OK || exit 1"]
    depends_on:
      msa-db:
        condition: service_healthy
    logging:
      <<: *logging
    volumes:
      - "msa_bud_logs:/opt/bud/logs/"
    networks:
      default:
        aliases:
          - "msa_bud"

  msa-alarm:
    restart: unless-stopped
    depends_on:
      msa-db:
        condition: service_healthy
      msa-api:
        condition: service_healthy
      msa-es:
        condition: service_started
    environment:
      <<: *es-configuration
    healthcheck:
      interval: 10s
      retries: 10
      start_period: 30s
      test:
        - CMD-SHELL
        - /opt/sms/bin/sms -e ISALIVE -t 1 | grep -q OK || exit 1
      timeout: 5s
    image: ubiqube/msa2-alarm:sha-a6826b34031867c8f729cc71ea79bdc524d31dc7
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - msa_alarm
    volumes:
      - msa_sms_logs:/opt/sms/logs
      - msa_alarmbulkfiles:/opt/sms/spool/alarms
      - msa_alarmbulkfiles_err:/opt/sms/spool/alarms-error

  msa-monitoring:
    restart: unless-stopped
    container_name: msa_monitoring
    image: ubiqube/msa2-monitoring:sha-169df1f29859be6561c431bdec125ea1e90e7ab7
    healthcheck:
      test: ["CMD-SHELL", "/opt/sms/bin/sms -e ISALIVE -t 1 | grep -q OK || exit 1"]
    depends_on:
      msa-db:
        condition: service_healthy
      msa-es:
        condition: service_started
      msa-dev:
        condition: service_started
      msa-sms:
        condition: service_started
    environment:
      # ES_MON
      # "yes" : ES + RRD
      # "only" : ES only (no RRD)
      # any other values ("no" is recommended!) RRD only (no ES)
      ES_MON: "no"
      <<: *es-configuration
    logging:
      <<: *logging
    volumes:
      - "msa_dev:/opt/devops/"
      - "msa_entities:/opt/fmc_entities"
      - "msa_repository:/opt/fmc_repository"
      - "rrd_repository:/opt/rrd"
      - "msa_sms_logs:/opt/sms/logs"
      - "msa_monitbulkfiles:/opt/sms/spool/parser"
      - "msa_monitbulkfiles_err:/opt/sms/spool/parser-error"
    networks:
      default:
        aliases:
          - "msa_monitoring"

  msa-rsyslog:
    restart: unless-stopped
    container_name: msa_rsyslog
    depends_on:
      msa-broker:
        condition: service_started
    image: ubiqube/msa2-rsyslog:sha-a197212ba58e60726fc5ca2f493c1045acd0c47e
    environment:
      # ACTIONTYPE: omudpspoof or omkafka
      # configure a specific port for TLS. Default is 6514
      # TLS_SYSLOG_PORT: 6514
      ACTIONTYPE: "omamqp1"
      <<: *amqp-syslog
    ports:
      - target: 514
        published: 514
        protocol: udp
        mode: host
      - target: 514
        published: 514
        protocol: tcp
        mode: host
      - target: 6514
        published: 6514
        protocol: tcp
        mode: host
    networks:
      default:
        aliases:
          - "msa_rsyslog"
    logging:
      <<: *logging

  msa-broker:
    environment:
      ARTEMIS_PASSWORD: simetraehcapa
      ARTEMIS_USER: artemis
      EXTRA_ARGS: --http-host 0.0.0.0 --relax-jolokia --clustered --addresses core-engine.syslog:anycast --queues core-engine.syslog:anycast
    healthcheck:
      test: ./bin/artemis check node --user=$${ARTEMIS_USER} --password=$${ARTEMIS_PASSWORD} --silent &>/dev/null
    image: docker.io/ubiqube/msa2-broker:sha-c7b473f778eb2cb1d5f5a6496e6064ed0bdec0a8
    logging:
      <<: *logging
    restart: unless-stopped
    volumes:
      - msa_broker:/var/lib/artemis-instance

  msa-camunda:
    depends_on:
      msa-db:
        condition: service_healthy
    environment:
      DB_DRIVER: org.postgresql.Driver
      DB_PASSWORD: camunda
      DB_URL: jdbc:postgresql://msa-db:5432/process-engine
      DB_USERNAME: camunda
      DB_VALIDATE_ON_BORROW: "true"
      DB_VALIDATION_QUERY: SELECT 1
      WAIT_FOR: msa-db:5432
      WAIT_FOR_TIMEOUT: 60
    healthcheck:
      interval: 10s
      retries: 3
      start_period: 90s
      test:
        - CMD-SHELL
        - curl -s --fail http://localhost:8080/actuator/health |jq -r '.status' |grep '^UP$$'
      timeout: 5s
    image: ubiqube/msa2-camunda:sha-863f05ca4cd51cf351dc75bfc145142f0a4de036
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - camunda
    restart: unless-stopped

  msa-es:
    container_name: msa_es
    environment:
      <<: *es-configuration
      ES_JAVA_OPTS: -Xms512m -Xmx1024m
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      script.painless.regex.enabled: "true"
    healthcheck:
      interval: 10s
      retries: 10
      start_period: 30s
      test:
        - CMD-SHELL
        - 'test -f /home/install/init-done && curl -s -XGET -H ''Authorization: Basic c3VwZXJ1c2VyOnheWnl1R002fnU9K2ZZMkc=''  ''http://localhost:9200/_cluster/health?pretty'' | grep -q ''status.*green'' || exit 1'
      timeout: 2s
    image: ubiqube/msa2-es:sha-c5210c1a3efd2ec5dd309305ce76fa2801f65524
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - msa_es
    restart: unless-stopped
    ulimits:
      memlock:
        hard: -1
        soft: -1
    volumes:
      - msa_es:/usr/share/elasticsearch/data
      - msa_es_config:/usr/share/elasticsearch/config

  msa-cerebro:
    container_name: msa_cerebro
    depends_on:
      msa-es:
        condition: service_started
    entrypoint:
      - /opt/cerebro/bin/cerebro
      - -Dhosts.0.host=http://msa-es:9200
    environment:
      AUTH_TYPE: basic
      BASIC_AUTH_PWD: N@X{M4tfw'5%)+35
      BASIC_AUTH_USER: cerebro
    healthcheck:
      test: curl --fail http://localhost:9000/
    image: ubiqube/msa2-cerebro:sha-3438b6a723d22d15afbd877dead9820c6adac735
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - msa_cerebro
    ports:
      - 9000:9000
    restart: unless-stopped

  msa-kibana:
    depends_on:
      msa-es:
        condition: service_started
    environment:
      <<: *es-configuration
      ELASTICSEARCH_HOSTS: http://msa-es:9200
      ELASTICSEARCH_URL: http://msa-es:9200
    healthcheck:
      test: curl -k --fail http://localhost:5601/kibana/
    image: ubiqube/msa2-kibana:sha-fbe20e11564c106b789983b24900186acfe81036
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - msa_kibana
    ports:
      - 5601:5601
    restart: unless-stopped

  msa-dev:
    healthcheck:
      test:
        - CMD-SHELL
        - test -f /usr/bin/install_libraries.sh || echo false
    image: ubiqube/msa2-linuxdev:sha-f17ca9bb07d3b88a1dcc30ab0dacc5c62e3dd194
    logging:
      <<: *logging
    networks:
      default:
        aliases:
          - msa_dev
    restart: unless-stopped
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - msa_entities:/opt/fmc_entities
      - msa_repository:/opt/fmc_repository
      - msa_dev:/opt/devops/

  msa-smtp:
    environment:
      ALLOWED_SENDER_DOMAINS: ""
      ALLOW_EMPTY_SENDER_DOMAINS: "true"
      HOSTNAME: msa-smtp
      # RELAYHOST: <MTA ip>:25
      POSTFIX_message_size_limit: 2097152
    image: boky/postfix:4.2.1-alpine
    restart: unless-stopped

  msa-linux-me:
    container_name: linux_me
    # use local image for quickstart dev => for release: make sure the changes are ported to msa-docker and uncomment the line below
    #image: ubiqube/msa2-linuxme:cc4357bc05c6502c7d2ceb7d3c6b090e24a8411e
    image: ubiqube/msa2-linuxme:sha-afc771d7314571a6fca8a2cbab9c2cfb3179f84c
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - DAC_READ_SEARCH
      - sys_rawio
    ports:
      - "2224:22"
    devices:                     # required for dmidecode used by polld/asset
      - "/dev/mem:/dev/mem"
    hostname: linux-me
    privileged: true
    networks:
      default:
        aliases:
          - "linux_me"
        ipv4_address: 172.20.0.101
    logging:
      <<: *logging
    restart: unless-stopped

  msa-linux-me-2:
    container_name: linux_me_2
    # use local image for quickstart dev => for release: make sure the changes are ported to msa-docker and uncomment the line below
    image: ubiqube/msa2-linuxme:sha-afc771d7314571a6fca8a2cbab9c2cfb3179f84c
    build: ./lab/linux.me
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - DAC_READ_SEARCH
      - sys_rawio
    ports:
      - "2225:22"
    devices:                     # required for dmidecode used by polld/asset
      - "/dev/mem:/dev/mem"
    hostname: linux-me-2
    privileged: true
    networks:
      default:
        aliases:
          - "linux_me_2"
        ipv4_address: 172.20.0.102
    logging:
      <<: *logging
    restart: unless-stopped

  msa2-es-ilm:
    container_name: msa2_es-ilm
    # healthcheck:
    #  test: ["CMD-SHELL", "find /opt/msa2-es-ilm/log/log_retention.log -type f -mmin -10"]
    depends_on:
      msa-es:
        condition: service_started
    environment:
      <<: *es-configuration
      ELASTICSEARCH_URL: msa_es:9200
      UBI_ES_ALARM_INDEX_MULTIPLE_TTL: '*|90d'
      UBI_ES_AUDIT_INDEX_MULTIPLE_TTL: '*|90d'
      UBI_ES_CACHE_INDEX_DEFAULT_TTL: 1w
      UBI_ES_DELETE_SCROLL_SIZE: "4000"
      UBI_ES_ILM_LOG_CRONTAB: '# */2 * * * * root php /opt/ubi-es-ilm/log_retention_management.php --verbose=3 > /proc/1/fd/1 2>&1'
      # For elasticsearch scripts /opt/ubi-es-ilm/log_retention_management.php
      # UBI_ES_INDEX_MULTIPLE_TTL:        "type:traffic|7d,type:event|30d,*|90d"
      UBI_ES_INDEX_MULTIPLE_TTL: '*|90d'
      UBI_ES_LOG_DETENTION_DELETE: "true"
      UBI_ES_LOG_SEARCH_INDEX_LIST: ubilogs
      UBI_ES_MAX_DOCS: ""
      UBI_ES_RETENTION_ALARM_INDEX_NAME: ubialarm*
      UBI_ES_RETENTION_AUDIT_INDEX_NAME: ubiaudit*
      UBI_ES_RETENTION_INDEX_NAME: ubilogs*
    image: ubiqube/msa2-es-ilm:sha-6071ae10ede7a06b1982210b7da962ac862586bb
    networks:
      default:
        aliases:
          - msa2_es-ilm
    restart: unless-stopped
    volumes:
      - msa2_es-ilm:/opt/msa2-es-ilm

  msa-zipkin:
    image: docker.io/openzipkin/zipkin
    environment:
      STORAGE_TYPE: mem
      #STORAGE_TYPE: elasticsearch
      #ES_HOSTS: http://msa-es:9200
      #ES_USERNAME: superuser
      #ES_PASSWORD: x^ZyuGM6~u=+fY2G
    ports:
      - target: 9411
        published: 9411
        protocol: tcp
        mode: ingress

volumes:
  msa_broker:
  msa_db:
  msa_mongodb_data:
  msa_dev:
  msa_entities:
  msa_repository:
  msa_es:
  msa_es_config:
  rrd_repository:
  msa_api_logs:
  msa_api_keystore:
  msa_sms_logs:
  msa_bud_logs:
  msa_front:
  msa_front_conf:
  msa_svn:
  msa_svn_ws:
  msa_ai_ml_db:
  rsyslog_conf:
  msa_bulkfiles:
  msa_bulkfiles_err:
  msa_parsebulkfiles:
  msa_parsebulkfiles_err:
  msa_snmptrapbulkfiles:
  msa_snmptrapbulkfiles_err:
  msa_monitbulkfiles:
  msa_monitbulkfiles_err:
  msa_alarmbulkfiles:
  msa_alarmbulkfiles_err:
  msa2_es-ilm:

networks:
  default:
    name: quickstart_default
    ipam:
      config:
        - subnet: 172.20.0.0/24
    driver_opts:
      encrypted: "true"
